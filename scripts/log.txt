MODEL_PATH: microsoft/Phi-3.5-mini-instruct
MODEL_TEMPLATE_TYPE: Phi3
MODEL_FRAMEWORK: hf
TOKENIZER_PATH: microsoft/Phi-3.5-mini-instruct
TOKENIZER_TYPE: hf
OPENAI_API_KEY: 
GEMINI_API_KEY: 
AZURE_ID: 
AZURE_SECRET: 
AZURE_ENDPOINT: 
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_single_1             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack repeat --type_needle_k words --type_needle_v numbers --num_needle_k 1 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 853 | Haystack: 25
Max length 4096 | Current length 1481 | Haystack: 50
Max length 4096 | Current length 2097 | Haystack: 75
Max length 4096 | Current length 2728 | Haystack: 100
Max length 4096 | Current length 3353 | Haystack: 125
Max length 4096 | Current length 3972 | Haystack: 150
Max length 4096 | Current length 4606 | Haystack: 175
Num haystack: 150

Prepare niah_single_1 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_1/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_single_1 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_1/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_single_1.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.60s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.07s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.15s/it]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:03<06:27,  3.12s/it]  2%|▏         | 2/125 [00:05<05:24,  2.64s/it]  2%|▏         | 3/125 [00:07<05:02,  2.48s/it]  3%|▎         | 4/125 [00:10<04:54,  2.43s/it]  4%|▍         | 5/125 [00:12<04:47,  2.40s/it]  5%|▍         | 6/125 [00:14<04:41,  2.36s/it]  6%|▌         | 7/125 [00:16<04:36,  2.34s/it]  6%|▋         | 8/125 [00:19<04:31,  2.32s/it]  7%|▋         | 9/125 [00:21<04:29,  2.33s/it]  8%|▊         | 10/125 [00:23<04:26,  2.32s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:26<04:23,  2.31s/it] 10%|▉         | 12/125 [00:28<04:21,  2.31s/it] 10%|█         | 13/125 [00:30<04:18,  2.31s/it] 11%|█         | 14/125 [00:33<04:15,  2.31s/it] 12%|█▏        | 15/125 [00:35<04:13,  2.31s/it] 13%|█▎        | 16/125 [00:37<04:11,  2.31s/it] 14%|█▎        | 17/125 [00:40<04:09,  2.31s/it] 14%|█▍        | 18/125 [00:42<04:08,  2.32s/it] 15%|█▌        | 19/125 [00:44<04:06,  2.32s/it] 16%|█▌        | 20/125 [00:47<04:05,  2.33s/it] 17%|█▋        | 21/125 [00:49<04:01,  2.32s/it] 18%|█▊        | 22/125 [00:51<03:59,  2.32s/it] 18%|█▊        | 23/125 [00:54<03:56,  2.32s/it] 19%|█▉        | 24/125 [00:56<03:53,  2.31s/it] 20%|██        | 25/125 [00:58<03:51,  2.31s/it] 21%|██        | 26/125 [01:00<03:50,  2.32s/it] 22%|██▏       | 27/125 [01:03<03:49,  2.35s/it] 22%|██▏       | 28/125 [01:05<03:46,  2.33s/it] 23%|██▎       | 29/125 [01:07<03:42,  2.32s/it] 24%|██▍       | 30/125 [01:10<03:40,  2.33s/it] 25%|██▍       | 31/125 [01:12<03:38,  2.33s/it] 26%|██▌       | 32/125 [01:14<03:36,  2.32s/it] 26%|██▋       | 33/125 [01:17<03:34,  2.33s/it] 27%|██▋       | 34/125 [01:19<03:32,  2.34s/it] 28%|██▊       | 35/125 [01:21<03:29,  2.33s/it] 29%|██▉       | 36/125 [01:24<03:26,  2.33s/it] 30%|██▉       | 37/125 [01:26<03:25,  2.34s/it] 30%|███       | 38/125 [01:28<03:22,  2.33s/it] 31%|███       | 39/125 [01:31<03:20,  2.33s/it] 32%|███▏      | 40/125 [01:33<03:17,  2.33s/it] 33%|███▎      | 41/125 [01:35<03:15,  2.32s/it] 34%|███▎      | 42/125 [01:38<03:12,  2.31s/it] 34%|███▍      | 43/125 [01:40<03:09,  2.32s/it] 35%|███▌      | 44/125 [01:42<03:08,  2.32s/it] 36%|███▌      | 45/125 [01:45<03:05,  2.32s/it] 37%|███▋      | 46/125 [01:47<03:05,  2.35s/it] 38%|███▊      | 47/125 [01:49<03:02,  2.34s/it] 38%|███▊      | 48/125 [01:52<02:59,  2.33s/it] 39%|███▉      | 49/125 [01:54<02:57,  2.33s/it] 40%|████      | 50/125 [01:56<02:54,  2.33s/it] 41%|████      | 51/125 [01:59<02:51,  2.32s/it] 42%|████▏     | 52/125 [02:01<02:50,  2.33s/it] 42%|████▏     | 53/125 [02:03<02:47,  2.33s/it] 43%|████▎     | 54/125 [02:06<02:45,  2.33s/it] 44%|████▍     | 55/125 [02:08<02:43,  2.33s/it] 45%|████▍     | 56/125 [02:10<02:40,  2.32s/it] 46%|████▌     | 57/125 [02:13<02:39,  2.35s/it] 46%|████▋     | 58/125 [02:15<02:37,  2.35s/it] 47%|████▋     | 59/125 [02:17<02:34,  2.35s/it] 48%|████▊     | 60/125 [02:20<02:31,  2.33s/it] 49%|████▉     | 61/125 [02:22<02:28,  2.32s/it] 50%|████▉     | 62/125 [02:24<02:26,  2.33s/it] 50%|█████     | 63/125 [02:27<02:23,  2.32s/it] 51%|█████     | 64/125 [02:29<02:22,  2.33s/it] 52%|█████▏    | 65/125 [02:31<02:20,  2.33s/it] 53%|█████▎    | 66/125 [02:34<02:17,  2.33s/it] 54%|█████▎    | 67/125 [02:36<02:15,  2.34s/it] 54%|█████▍    | 68/125 [02:38<02:13,  2.34s/it] 55%|█████▌    | 69/125 [02:41<02:11,  2.35s/it] 56%|█████▌    | 70/125 [02:43<02:08,  2.33s/it] 57%|█████▋    | 71/125 [02:45<02:06,  2.34s/it] 58%|█████▊    | 72/125 [02:48<02:04,  2.34s/it] 58%|█████▊    | 73/125 [02:50<02:02,  2.35s/it] 59%|█████▉    | 74/125 [02:52<01:59,  2.35s/it] 60%|██████    | 75/125 [02:55<01:56,  2.34s/it] 61%|██████    | 76/125 [02:57<01:54,  2.34s/it] 62%|██████▏   | 77/125 [02:59<01:52,  2.34s/it] 62%|██████▏   | 78/125 [03:02<01:50,  2.35s/it] 63%|██████▎   | 79/125 [03:04<01:47,  2.34s/it] 64%|██████▍   | 80/125 [03:06<01:45,  2.34s/it] 65%|██████▍   | 81/125 [03:09<01:42,  2.32s/it] 66%|██████▌   | 82/125 [03:11<01:40,  2.33s/it] 66%|██████▋   | 83/125 [03:13<01:38,  2.34s/it] 67%|██████▋   | 84/125 [03:16<01:35,  2.33s/it] 68%|██████▊   | 85/125 [03:18<01:33,  2.34s/it] 69%|██████▉   | 86/125 [03:21<01:31,  2.35s/it] 70%|██████▉   | 87/125 [03:23<01:29,  2.35s/it] 70%|███████   | 88/125 [03:25<01:26,  2.34s/it] 71%|███████   | 89/125 [03:28<01:24,  2.35s/it] 72%|███████▏  | 90/125 [03:30<01:22,  2.35s/it] 73%|███████▎  | 91/125 [03:32<01:19,  2.34s/it] 74%|███████▎  | 92/125 [03:35<01:17,  2.35s/it] 74%|███████▍  | 93/125 [03:37<01:14,  2.34s/it] 75%|███████▌  | 94/125 [03:39<01:12,  2.33s/it] 76%|███████▌  | 95/125 [03:42<01:09,  2.32s/it] 77%|███████▋  | 96/125 [03:44<01:07,  2.33s/it] 78%|███████▊  | 97/125 [03:46<01:05,  2.33s/it] 78%|███████▊  | 98/125 [03:49<01:02,  2.33s/it] 79%|███████▉  | 99/125 [03:51<01:00,  2.33s/it] 80%|████████  | 100/125 [03:53<00:58,  2.33s/it] 81%|████████  | 101/125 [03:56<00:56,  2.34s/it] 82%|████████▏ | 102/125 [03:58<00:54,  2.37s/it] 82%|████████▏ | 103/125 [04:00<00:51,  2.35s/it] 83%|████████▎ | 104/125 [04:03<00:49,  2.35s/it] 84%|████████▍ | 105/125 [04:05<00:46,  2.35s/it] 85%|████████▍ | 106/125 [04:07<00:44,  2.35s/it] 86%|████████▌ | 107/125 [04:10<00:42,  2.34s/it] 86%|████████▋ | 108/125 [04:12<00:39,  2.34s/it] 87%|████████▋ | 109/125 [04:14<00:37,  2.33s/it] 88%|████████▊ | 110/125 [04:17<00:34,  2.32s/it] 89%|████████▉ | 111/125 [04:19<00:32,  2.33s/it] 90%|████████▉ | 112/125 [04:21<00:30,  2.33s/it] 90%|█████████ | 113/125 [04:24<00:28,  2.34s/it] 91%|█████████ | 114/125 [04:26<00:25,  2.33s/it] 92%|█████████▏| 115/125 [04:28<00:23,  2.35s/it] 93%|█████████▎| 116/125 [04:31<00:21,  2.35s/it] 94%|█████████▎| 117/125 [04:33<00:18,  2.34s/it] 94%|█████████▍| 118/125 [04:35<00:16,  2.35s/it] 95%|█████████▌| 119/125 [04:38<00:14,  2.35s/it] 96%|█████████▌| 120/125 [04:40<00:11,  2.34s/it] 97%|█████████▋| 121/125 [04:42<00:09,  2.34s/it] 98%|█████████▊| 122/125 [04:45<00:07,  2.36s/it] 98%|█████████▊| 123/125 [04:47<00:04,  2.35s/it] 99%|█████████▉| 124/125 [04:49<00:02,  2.34s/it]100%|██████████| 125/125 [04:52<00:00,  2.33s/it]100%|██████████| 125/125 [04:52<00:00,  2.34s/it]
Used time: 5.0 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_single_2             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack essay --type_needle_k words --type_needle_v numbers --num_needle_k 1 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 921 | Haystack: 500
Max length 4096 | Current length 1643 | Haystack: 1000
Max length 4096 | Current length 2328 | Haystack: 1500
Max length 4096 | Current length 2998 | Haystack: 2000
Max length 4096 | Current length 3710 | Haystack: 2500
Max length 4096 | Current length 4398 | Haystack: 3000
Num haystack: 2500

Prepare niah_single_2 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_2/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_single_2 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_2/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_single_2.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.38s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.11it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.03it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:03<06:25,  3.11s/it]  2%|▏         | 2/125 [00:05<05:20,  2.61s/it]  2%|▏         | 3/125 [00:07<05:00,  2.47s/it]  3%|▎         | 4/125 [00:10<04:52,  2.42s/it]  4%|▍         | 5/125 [00:13<05:49,  2.92s/it]  5%|▍         | 6/125 [00:17<06:26,  3.25s/it]  6%|▌         | 7/125 [00:19<05:45,  2.93s/it]  6%|▋         | 8/125 [00:23<05:54,  3.03s/it]  7%|▋         | 9/125 [00:25<05:24,  2.80s/it]  8%|▊         | 10/125 [00:27<05:02,  2.63s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:30<04:47,  2.52s/it] 10%|▉         | 12/125 [00:32<04:36,  2.45s/it] 10%|█         | 13/125 [00:34<04:29,  2.41s/it] 11%|█         | 14/125 [00:36<04:25,  2.40s/it] 12%|█▏        | 15/125 [00:42<06:11,  3.38s/it] 13%|█▎        | 16/125 [00:45<05:35,  3.08s/it] 14%|█▎        | 17/125 [00:47<05:08,  2.86s/it] 14%|█▍        | 18/125 [00:49<04:48,  2.69s/it] 15%|█▌        | 19/125 [00:52<04:34,  2.59s/it] 16%|█▌        | 20/125 [00:54<04:23,  2.51s/it] 17%|█▋        | 21/125 [00:56<04:14,  2.45s/it] 18%|█▊        | 22/125 [00:58<04:07,  2.40s/it] 18%|█▊        | 23/125 [01:01<04:02,  2.38s/it] 19%|█▉        | 24/125 [01:06<05:11,  3.08s/it] 20%|██        | 25/125 [01:08<04:44,  2.85s/it] 21%|██        | 26/125 [01:10<04:26,  2.69s/it] 22%|██▏       | 27/125 [01:12<04:11,  2.57s/it] 22%|██▏       | 28/125 [01:15<04:01,  2.48s/it] 23%|██▎       | 29/125 [01:18<04:26,  2.78s/it] 24%|██▍       | 30/125 [01:20<04:08,  2.62s/it] 25%|██▍       | 31/125 [01:24<04:28,  2.86s/it] 26%|██▌       | 32/125 [01:26<04:08,  2.68s/it] 26%|██▋       | 33/125 [01:28<03:55,  2.56s/it] 27%|██▋       | 34/125 [01:31<03:45,  2.48s/it] 28%|██▊       | 35/125 [01:33<03:39,  2.44s/it] 29%|██▉       | 36/125 [01:35<03:34,  2.41s/it] 30%|██▉       | 37/125 [01:38<03:29,  2.38s/it] 30%|███       | 38/125 [01:40<03:25,  2.36s/it] 31%|███       | 39/125 [01:42<03:22,  2.35s/it] 32%|███▏      | 40/125 [01:45<03:18,  2.33s/it] 33%|███▎      | 41/125 [01:48<03:36,  2.57s/it] 34%|███▎      | 42/125 [01:53<04:31,  3.27s/it] 34%|███▍      | 43/125 [01:55<04:04,  2.98s/it] 35%|███▌      | 44/125 [01:57<03:43,  2.76s/it] 36%|███▌      | 45/125 [01:59<03:29,  2.62s/it] 37%|███▋      | 46/125 [02:02<03:18,  2.51s/it] 38%|███▊      | 47/125 [02:06<03:52,  2.98s/it] 38%|███▊      | 48/125 [02:08<03:33,  2.77s/it] 39%|███▉      | 49/125 [02:10<03:20,  2.64s/it] 40%|████      | 50/125 [02:14<03:48,  3.05s/it] 41%|████      | 51/125 [02:17<03:28,  2.82s/it] 42%|████▏     | 52/125 [02:20<03:46,  3.10s/it] 42%|████▏     | 53/125 [02:23<03:25,  2.85s/it] 43%|████▎     | 54/125 [02:25<03:10,  2.69s/it] 44%|████▍     | 55/125 [02:27<02:59,  2.57s/it] 45%|████▍     | 56/125 [02:30<02:51,  2.49s/it] 46%|████▌     | 57/125 [02:33<03:07,  2.76s/it] 46%|████▋     | 58/125 [02:36<03:18,  2.96s/it] 47%|████▋     | 59/125 [02:39<03:01,  2.76s/it] 48%|████▊     | 60/125 [02:41<02:50,  2.63s/it] 49%|████▉     | 61/125 [02:43<02:42,  2.54s/it] 50%|████▉     | 62/125 [02:46<02:34,  2.46s/it] 50%|█████     | 63/125 [02:48<02:31,  2.44s/it] 51%|█████     | 64/125 [02:51<02:46,  2.74s/it] 52%|█████▏    | 65/125 [02:54<02:35,  2.59s/it] 53%|█████▎    | 66/125 [02:56<02:27,  2.49s/it] 54%|█████▎    | 67/125 [02:58<02:22,  2.45s/it] 54%|█████▍    | 68/125 [03:01<02:16,  2.40s/it] 55%|█████▌    | 69/125 [03:03<02:11,  2.36s/it] 56%|█████▌    | 70/125 [03:05<02:08,  2.34s/it] 57%|█████▋    | 71/125 [03:07<02:05,  2.33s/it] 58%|█████▊    | 72/125 [03:10<02:02,  2.30s/it] 58%|█████▊    | 73/125 [03:12<02:00,  2.32s/it] 59%|█████▉    | 74/125 [03:14<01:58,  2.32s/it] 60%|██████    | 75/125 [03:17<01:56,  2.33s/it] 61%|██████    | 76/125 [03:20<02:09,  2.64s/it] 62%|██████▏   | 77/125 [03:22<02:01,  2.54s/it] 62%|██████▏   | 78/125 [03:25<01:55,  2.45s/it] 63%|██████▎   | 79/125 [03:27<01:50,  2.41s/it] 64%|██████▍   | 80/125 [03:29<01:47,  2.38s/it] 65%|██████▍   | 81/125 [03:32<01:43,  2.36s/it] 66%|██████▌   | 82/125 [03:34<01:41,  2.35s/it] 66%|██████▋   | 83/125 [03:36<01:38,  2.35s/it] 67%|██████▋   | 84/125 [03:39<01:36,  2.36s/it] 68%|██████▊   | 85/125 [03:41<01:33,  2.33s/it] 69%|██████▉   | 86/125 [03:43<01:30,  2.33s/it] 70%|██████▉   | 87/125 [03:47<01:40,  2.66s/it] 70%|███████   | 88/125 [03:49<01:34,  2.55s/it] 71%|███████   | 89/125 [03:51<01:29,  2.48s/it] 72%|███████▏  | 90/125 [03:54<01:25,  2.43s/it] 73%|███████▎  | 91/125 [03:56<01:22,  2.41s/it] 74%|███████▎  | 92/125 [03:58<01:18,  2.38s/it] 74%|███████▍  | 93/125 [04:01<01:15,  2.35s/it] 75%|███████▌  | 94/125 [04:03<01:12,  2.33s/it] 76%|███████▌  | 95/125 [04:05<01:10,  2.37s/it] 77%|███████▋  | 96/125 [04:08<01:08,  2.36s/it] 78%|███████▊  | 97/125 [04:10<01:05,  2.35s/it] 78%|███████▊  | 98/125 [04:13<01:10,  2.61s/it] 79%|███████▉  | 99/125 [04:16<01:05,  2.52s/it] 80%|████████  | 100/125 [04:19<01:10,  2.83s/it] 81%|████████  | 101/125 [04:21<01:03,  2.67s/it] 82%|████████▏ | 102/125 [04:24<00:59,  2.58s/it] 82%|████████▏ | 103/125 [04:26<00:55,  2.51s/it] 83%|████████▎ | 104/125 [04:28<00:51,  2.45s/it] 84%|████████▍ | 105/125 [04:31<00:48,  2.45s/it] 85%|████████▍ | 106/125 [04:33<00:45,  2.41s/it] 86%|████████▌ | 107/125 [04:37<00:51,  2.86s/it] 86%|████████▋ | 108/125 [04:39<00:45,  2.70s/it] 87%|████████▋ | 109/125 [04:42<00:41,  2.61s/it] 88%|████████▊ | 110/125 [04:44<00:37,  2.51s/it] 89%|████████▉ | 111/125 [04:46<00:34,  2.44s/it] 90%|████████▉ | 112/125 [04:49<00:31,  2.42s/it] 90%|█████████ | 113/125 [04:54<00:40,  3.35s/it] 91%|█████████ | 114/125 [04:58<00:36,  3.36s/it] 92%|█████████▏| 115/125 [05:04<00:43,  4.33s/it] 93%|█████████▎| 116/125 [05:07<00:33,  3.74s/it] 94%|█████████▎| 117/125 [05:09<00:26,  3.30s/it] 94%|█████████▍| 118/125 [05:13<00:25,  3.68s/it] 95%|█████████▌| 119/125 [05:16<00:19,  3.27s/it] 96%|█████████▌| 120/125 [05:21<00:18,  3.74s/it] 97%|█████████▋| 121/125 [05:23<00:13,  3.34s/it] 98%|█████████▊| 122/125 [05:29<00:12,  4.03s/it] 98%|█████████▊| 123/125 [05:31<00:07,  3.51s/it] 99%|█████████▉| 124/125 [05:33<00:03,  3.14s/it]100%|██████████| 125/125 [05:37<00:00,  3.30s/it]100%|██████████| 125/125 [05:37<00:00,  2.70s/it]
Used time: 5.7 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_single_3             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack essay --type_needle_k words --type_needle_v uuids --num_needle_k 1 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 980 | Haystack: 500
Max length 4096 | Current length 1693 | Haystack: 1000
Max length 4096 | Current length 2396 | Haystack: 1500
Max length 4096 | Current length 3051 | Haystack: 2000
Max length 4096 | Current length 3759 | Haystack: 2500
Max length 4096 | Current length 4463 | Haystack: 3000
Num haystack: 2500

Prepare niah_single_3 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_3/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_single_3 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_single_3/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_single_3.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.35s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.12it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.04it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:06<14:17,  6.91s/it]  2%|▏         | 2/125 [00:12<12:53,  6.29s/it]  2%|▏         | 3/125 [00:18<12:34,  6.19s/it]  3%|▎         | 4/125 [00:25<12:29,  6.20s/it]  4%|▍         | 5/125 [00:30<12:11,  6.09s/it]  5%|▍         | 6/125 [00:37<12:07,  6.11s/it]  6%|▌         | 7/125 [00:42<11:51,  6.03s/it]  6%|▋         | 8/125 [00:49<11:52,  6.09s/it]  7%|▋         | 9/125 [00:55<11:43,  6.06s/it]  8%|▊         | 10/125 [01:01<11:32,  6.02s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [01:07<11:31,  6.06s/it] 10%|▉         | 12/125 [01:13<11:32,  6.13s/it] 10%|█         | 13/125 [01:19<11:32,  6.18s/it] 11%|█         | 14/125 [01:25<11:18,  6.11s/it] 12%|█▏        | 15/125 [01:31<11:14,  6.13s/it] 13%|█▎        | 16/125 [01:38<11:14,  6.19s/it] 14%|█▎        | 17/125 [01:44<10:54,  6.06s/it] 14%|█▍        | 18/125 [01:50<10:48,  6.06s/it] 15%|█▌        | 19/125 [01:56<10:46,  6.09s/it] 16%|█▌        | 20/125 [02:02<10:42,  6.12s/it] 17%|█▋        | 21/125 [02:08<10:36,  6.12s/it] 18%|█▊        | 22/125 [02:14<10:38,  6.20s/it] 18%|█▊        | 23/125 [02:20<10:26,  6.14s/it] 19%|█▉        | 24/125 [02:27<10:19,  6.13s/it] 20%|██        | 25/125 [02:33<10:19,  6.19s/it] 21%|██        | 26/125 [02:39<10:13,  6.19s/it] 22%|██▏       | 27/125 [02:45<10:05,  6.18s/it] 22%|██▏       | 28/125 [02:52<10:02,  6.21s/it] 23%|██▎       | 29/125 [02:58<09:59,  6.24s/it] 24%|██▍       | 30/125 [03:04<09:51,  6.22s/it] 25%|██▍       | 31/125 [03:10<09:41,  6.19s/it] 26%|██▌       | 32/125 [03:17<09:44,  6.28s/it] 26%|██▋       | 33/125 [03:23<09:35,  6.26s/it] 27%|██▋       | 34/125 [03:29<09:25,  6.21s/it] 28%|██▊       | 35/125 [03:35<09:21,  6.23s/it] 29%|██▉       | 36/125 [03:42<09:15,  6.24s/it] 30%|██▉       | 37/125 [03:48<09:13,  6.29s/it] 30%|███       | 38/125 [03:54<09:06,  6.29s/it] 31%|███       | 39/125 [04:00<08:58,  6.26s/it] 32%|███▏      | 40/125 [04:06<08:46,  6.19s/it] 33%|███▎      | 41/125 [04:13<08:40,  6.20s/it] 34%|███▎      | 42/125 [04:19<08:41,  6.28s/it] 34%|███▍      | 43/125 [04:26<08:40,  6.35s/it] 35%|███▌      | 44/125 [04:32<08:29,  6.29s/it] 36%|███▌      | 45/125 [04:38<08:24,  6.31s/it] 37%|███▋      | 46/125 [04:44<08:15,  6.27s/it] 38%|███▊      | 47/125 [04:51<08:08,  6.26s/it] 38%|███▊      | 48/125 [04:57<08:02,  6.26s/it] 39%|███▉      | 49/125 [05:03<07:53,  6.23s/it] 40%|████      | 50/125 [05:09<07:48,  6.25s/it] 41%|████      | 51/125 [05:16<07:43,  6.26s/it] 42%|████▏     | 52/125 [05:22<07:36,  6.25s/it] 42%|████▏     | 53/125 [05:28<07:24,  6.18s/it] 43%|████▎     | 54/125 [05:34<07:19,  6.18s/it] 44%|████▍     | 55/125 [05:40<07:12,  6.18s/it] 45%|████▍     | 56/125 [05:46<07:04,  6.16s/it] 46%|████▌     | 57/125 [05:53<07:02,  6.22s/it] 46%|████▋     | 58/125 [05:59<06:57,  6.22s/it] 47%|████▋     | 59/125 [06:05<06:51,  6.23s/it] 48%|████▊     | 60/125 [06:11<06:47,  6.26s/it] 49%|████▉     | 61/125 [06:18<06:40,  6.26s/it] 50%|████▉     | 62/125 [06:24<06:36,  6.30s/it] 50%|█████     | 63/125 [06:30<06:31,  6.31s/it] 51%|█████     | 64/125 [06:37<06:25,  6.31s/it] 52%|█████▏    | 65/125 [06:43<06:17,  6.30s/it] 53%|█████▎    | 66/125 [06:49<06:09,  6.26s/it] 54%|█████▎    | 67/125 [06:56<06:05,  6.30s/it] 54%|█████▍    | 68/125 [07:02<06:00,  6.33s/it] 55%|█████▌    | 69/125 [07:08<05:52,  6.29s/it] 56%|█████▌    | 70/125 [07:14<05:44,  6.27s/it] 57%|█████▋    | 71/125 [07:21<05:36,  6.22s/it] 58%|█████▊    | 72/125 [07:27<05:29,  6.22s/it] 58%|█████▊    | 73/125 [07:33<05:28,  6.31s/it] 59%|█████▉    | 74/125 [07:40<05:22,  6.33s/it] 60%|██████    | 75/125 [07:46<05:13,  6.27s/it] 61%|██████    | 76/125 [07:52<05:05,  6.24s/it] 62%|██████▏   | 77/125 [07:58<05:01,  6.28s/it] 62%|██████▏   | 78/125 [08:05<04:54,  6.26s/it] 63%|██████▎   | 79/125 [08:11<04:49,  6.28s/it] 64%|██████▍   | 80/125 [08:17<04:42,  6.28s/it] 65%|██████▍   | 81/125 [08:23<04:35,  6.27s/it] 66%|██████▌   | 82/125 [08:30<04:32,  6.34s/it] 66%|██████▋   | 83/125 [08:36<04:21,  6.24s/it] 67%|██████▋   | 84/125 [08:42<04:15,  6.22s/it] 68%|██████▊   | 85/125 [08:48<04:10,  6.25s/it] 69%|██████▉   | 86/125 [08:54<04:01,  6.20s/it] 70%|██████▉   | 87/125 [09:01<03:56,  6.22s/it] 70%|███████   | 88/125 [09:07<03:50,  6.24s/it] 71%|███████   | 89/125 [09:13<03:44,  6.23s/it] 72%|███████▏  | 90/125 [09:20<03:39,  6.28s/it] 73%|███████▎  | 91/125 [09:26<03:31,  6.22s/it] 74%|███████▎  | 92/125 [09:32<03:23,  6.15s/it] 74%|███████▍  | 93/125 [09:38<03:17,  6.18s/it] 75%|███████▌  | 94/125 [09:44<03:09,  6.12s/it] 76%|███████▌  | 95/125 [09:50<03:03,  6.13s/it] 77%|███████▋  | 96/125 [09:56<02:59,  6.20s/it] 78%|███████▊  | 97/125 [10:03<02:55,  6.28s/it] 78%|███████▊  | 98/125 [10:09<02:47,  6.21s/it] 79%|███████▉  | 99/125 [10:15<02:41,  6.21s/it] 80%|████████  | 100/125 [10:21<02:33,  6.16s/it] 81%|████████  | 101/125 [10:27<02:27,  6.17s/it] 82%|████████▏ | 102/125 [10:33<02:21,  6.13s/it] 82%|████████▏ | 103/125 [10:40<02:15,  6.17s/it] 83%|████████▎ | 104/125 [10:46<02:09,  6.15s/it] 84%|████████▍ | 105/125 [10:52<02:04,  6.21s/it] 85%|████████▍ | 106/125 [10:58<01:58,  6.24s/it] 86%|████████▌ | 107/125 [11:05<01:52,  6.26s/it] 86%|████████▋ | 108/125 [11:11<01:46,  6.25s/it] 87%|████████▋ | 109/125 [11:17<01:39,  6.25s/it] 88%|████████▊ | 110/125 [11:23<01:33,  6.25s/it] 89%|████████▉ | 111/125 [11:30<01:27,  6.26s/it] 90%|████████▉ | 112/125 [11:36<01:21,  6.26s/it] 90%|█████████ | 113/125 [11:42<01:15,  6.30s/it] 91%|█████████ | 114/125 [11:49<01:09,  6.31s/it] 92%|█████████▏| 115/125 [11:55<01:03,  6.32s/it] 93%|█████████▎| 116/125 [12:01<00:56,  6.27s/it] 94%|█████████▎| 117/125 [12:08<00:50,  6.29s/it] 94%|█████████▍| 118/125 [12:14<00:44,  6.32s/it] 95%|█████████▌| 119/125 [12:20<00:38,  6.33s/it] 96%|█████████▌| 120/125 [12:27<00:31,  6.36s/it] 97%|█████████▋| 121/125 [12:33<00:24,  6.24s/it] 98%|█████████▊| 122/125 [12:39<00:18,  6.22s/it] 98%|█████████▊| 123/125 [12:45<00:12,  6.17s/it] 99%|█████████▉| 124/125 [12:51<00:06,  6.18s/it]100%|██████████| 125/125 [12:58<00:00,  6.23s/it]100%|██████████| 125/125 [12:58<00:00,  6.22s/it]
Used time: 13.1 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_multikey_1             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack essay --type_needle_k words --type_needle_v numbers --num_needle_k 4 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 997 | Haystack: 500
Max length 4096 | Current length 1707 | Haystack: 1000
Max length 4096 | Current length 2399 | Haystack: 1500
Max length 4096 | Current length 3065 | Haystack: 2000
Max length 4096 | Current length 3773 | Haystack: 2500
Max length 4096 | Current length 4482 | Haystack: 3000
Num haystack: 2500

Prepare niah_multikey_1 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_1/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_multikey_1 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_1/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_multikey_1.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.40s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.07it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.00s/it]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:03<06:36,  3.20s/it]  2%|▏         | 2/125 [00:05<05:38,  2.75s/it]  2%|▏         | 3/125 [00:08<05:18,  2.61s/it]  3%|▎         | 4/125 [00:10<05:08,  2.55s/it]  4%|▍         | 5/125 [00:12<04:59,  2.49s/it]  5%|▍         | 6/125 [00:15<04:52,  2.46s/it]  6%|▌         | 7/125 [00:17<04:49,  2.45s/it]  6%|▋         | 8/125 [00:20<04:48,  2.46s/it]  7%|▋         | 9/125 [00:22<04:44,  2.45s/it]  8%|▊         | 10/125 [00:25<04:41,  2.45s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:27<04:35,  2.42s/it] 10%|▉         | 12/125 [00:29<04:33,  2.42s/it] 10%|█         | 13/125 [00:32<04:30,  2.41s/it] 11%|█         | 14/125 [00:34<04:28,  2.42s/it] 12%|█▏        | 15/125 [00:37<04:27,  2.44s/it] 13%|█▎        | 16/125 [00:39<04:25,  2.44s/it] 14%|█▎        | 17/125 [00:42<04:23,  2.44s/it] 14%|█▍        | 18/125 [00:44<04:20,  2.44s/it] 15%|█▌        | 19/125 [00:46<04:16,  2.42s/it] 16%|█▌        | 20/125 [00:49<04:13,  2.41s/it] 17%|█▋        | 21/125 [00:51<04:12,  2.43s/it] 18%|█▊        | 22/125 [00:54<04:10,  2.43s/it] 18%|█▊        | 23/125 [00:56<04:07,  2.42s/it] 19%|█▉        | 24/125 [00:58<04:04,  2.42s/it] 20%|██        | 25/125 [01:01<04:02,  2.42s/it] 21%|██        | 26/125 [01:03<04:00,  2.43s/it] 22%|██▏       | 27/125 [01:06<03:58,  2.44s/it] 22%|██▏       | 28/125 [01:08<03:55,  2.43s/it] 23%|██▎       | 29/125 [01:11<03:53,  2.43s/it] 24%|██▍       | 30/125 [01:13<03:49,  2.41s/it] 25%|██▍       | 31/125 [01:15<03:46,  2.41s/it] 26%|██▌       | 32/125 [01:18<03:44,  2.41s/it] 26%|██▋       | 33/125 [01:20<03:41,  2.41s/it] 27%|██▋       | 34/125 [01:23<03:38,  2.40s/it] 28%|██▊       | 35/125 [01:25<03:36,  2.40s/it] 29%|██▉       | 36/125 [01:27<03:33,  2.40s/it] 30%|██▉       | 37/125 [01:30<03:31,  2.40s/it] 30%|███       | 38/125 [01:32<03:29,  2.41s/it] 31%|███       | 39/125 [01:35<03:27,  2.42s/it] 32%|███▏      | 40/125 [01:37<03:24,  2.41s/it] 33%|███▎      | 41/125 [01:40<03:24,  2.43s/it] 34%|███▎      | 42/125 [01:42<03:22,  2.44s/it] 34%|███▍      | 43/125 [01:44<03:19,  2.43s/it] 35%|███▌      | 44/125 [01:47<03:17,  2.44s/it] 36%|███▌      | 45/125 [01:49<03:14,  2.43s/it] 37%|███▋      | 46/125 [01:52<03:11,  2.42s/it] 38%|███▊      | 47/125 [01:54<03:08,  2.42s/it] 38%|███▊      | 48/125 [01:57<03:05,  2.41s/it] 39%|███▉      | 49/125 [01:59<03:03,  2.42s/it] 40%|████      | 50/125 [02:01<03:00,  2.41s/it] 41%|████      | 51/125 [02:04<02:58,  2.42s/it] 42%|████▏     | 52/125 [02:06<02:55,  2.41s/it] 42%|████▏     | 53/125 [02:09<02:53,  2.40s/it] 43%|████▎     | 54/125 [02:11<02:51,  2.41s/it] 44%|████▍     | 55/125 [02:13<02:47,  2.39s/it] 45%|████▍     | 56/125 [02:16<02:46,  2.41s/it] 46%|████▌     | 57/125 [02:18<02:44,  2.42s/it] 46%|████▋     | 58/125 [02:21<02:42,  2.42s/it] 47%|████▋     | 59/125 [02:23<02:39,  2.42s/it] 48%|████▊     | 60/125 [02:26<02:37,  2.43s/it] 49%|████▉     | 61/125 [02:28<02:35,  2.43s/it] 50%|████▉     | 62/125 [02:30<02:33,  2.43s/it] 50%|█████     | 63/125 [02:33<02:30,  2.43s/it] 51%|█████     | 64/125 [02:35<02:27,  2.42s/it] 52%|█████▏    | 65/125 [02:38<02:26,  2.44s/it] 53%|█████▎    | 66/125 [02:40<02:24,  2.44s/it] 54%|█████▎    | 67/125 [02:43<02:21,  2.45s/it] 54%|█████▍    | 68/125 [02:45<02:18,  2.42s/it] 55%|█████▌    | 69/125 [02:49<02:42,  2.90s/it] 56%|█████▌    | 70/125 [02:51<02:31,  2.76s/it] 57%|█████▋    | 71/125 [02:56<02:59,  3.33s/it] 58%|█████▊    | 72/125 [02:58<02:41,  3.04s/it] 58%|█████▊    | 73/125 [03:01<02:29,  2.87s/it] 59%|█████▉    | 74/125 [03:03<02:19,  2.73s/it] 60%|██████    | 75/125 [03:06<02:11,  2.64s/it] 61%|██████    | 76/125 [03:08<02:06,  2.57s/it] 62%|██████▏   | 77/125 [03:11<02:01,  2.53s/it] 62%|██████▏   | 78/125 [03:13<01:57,  2.49s/it] 63%|██████▎   | 79/125 [03:15<01:53,  2.46s/it] 64%|██████▍   | 80/125 [03:18<01:50,  2.46s/it] 65%|██████▍   | 81/125 [03:20<01:47,  2.44s/it] 66%|██████▌   | 82/125 [03:23<01:45,  2.45s/it] 66%|██████▋   | 83/125 [03:25<01:43,  2.47s/it] 67%|██████▋   | 84/125 [03:28<01:40,  2.44s/it] 68%|██████▊   | 85/125 [03:30<01:37,  2.44s/it] 69%|██████▉   | 86/125 [03:33<01:35,  2.45s/it] 70%|██████▉   | 87/125 [03:35<01:32,  2.44s/it] 70%|███████   | 88/125 [03:37<01:30,  2.44s/it] 71%|███████   | 89/125 [03:40<01:27,  2.43s/it] 72%|███████▏  | 90/125 [03:42<01:25,  2.44s/it] 73%|███████▎  | 91/125 [03:45<01:23,  2.44s/it] 74%|███████▎  | 92/125 [03:47<01:20,  2.44s/it] 74%|███████▍  | 93/125 [03:50<01:17,  2.43s/it] 75%|███████▌  | 94/125 [03:52<01:15,  2.44s/it] 76%|███████▌  | 95/125 [03:54<01:13,  2.44s/it] 77%|███████▋  | 96/125 [03:57<01:11,  2.45s/it] 78%|███████▊  | 97/125 [03:59<01:08,  2.45s/it] 78%|███████▊  | 98/125 [04:02<01:06,  2.46s/it] 79%|███████▉  | 99/125 [04:04<01:03,  2.45s/it] 80%|████████  | 100/125 [04:07<01:01,  2.45s/it] 81%|████████  | 101/125 [04:09<00:59,  2.46s/it] 82%|████████▏ | 102/125 [04:12<00:56,  2.46s/it] 82%|████████▏ | 103/125 [04:14<00:54,  2.46s/it] 83%|████████▎ | 104/125 [04:17<00:51,  2.46s/it] 84%|████████▍ | 105/125 [04:19<00:48,  2.45s/it] 85%|████████▍ | 106/125 [04:21<00:46,  2.45s/it] 86%|████████▌ | 107/125 [04:24<00:43,  2.44s/it] 86%|████████▋ | 108/125 [04:26<00:41,  2.42s/it] 87%|████████▋ | 109/125 [04:29<00:38,  2.43s/it] 88%|████████▊ | 110/125 [04:31<00:36,  2.43s/it] 89%|████████▉ | 111/125 [04:34<00:34,  2.44s/it] 90%|████████▉ | 112/125 [04:36<00:31,  2.44s/it] 90%|█████████ | 113/125 [04:38<00:29,  2.44s/it] 91%|█████████ | 114/125 [04:41<00:26,  2.43s/it] 92%|█████████▏| 115/125 [04:43<00:24,  2.44s/it] 93%|█████████▎| 116/125 [04:46<00:22,  2.45s/it] 94%|█████████▎| 117/125 [04:48<00:19,  2.45s/it] 94%|█████████▍| 118/125 [04:51<00:17,  2.45s/it] 95%|█████████▌| 119/125 [04:53<00:14,  2.46s/it] 96%|█████████▌| 120/125 [04:56<00:12,  2.45s/it] 97%|█████████▋| 121/125 [04:58<00:09,  2.45s/it] 98%|█████████▊| 122/125 [05:01<00:07,  2.45s/it] 98%|█████████▊| 123/125 [05:03<00:04,  2.45s/it] 99%|█████████▉| 124/125 [05:05<00:02,  2.45s/it]100%|██████████| 125/125 [05:08<00:00,  2.46s/it]100%|██████████| 125/125 [05:08<00:00,  2.47s/it]
Used time: 5.2 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_multikey_2             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack needle --type_needle_k words --type_needle_v numbers --num_needle_k 1 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 842 | Haystack: 25
Max length 4096 | Current length 1452 | Haystack: 50
Max length 4096 | Current length 2057 | Haystack: 75
Max length 4096 | Current length 2667 | Haystack: 100
Max length 4096 | Current length 3273 | Haystack: 125
Max length 4096 | Current length 3885 | Haystack: 150
Max length 4096 | Current length 4502 | Haystack: 175
Num haystack: 150

Prepare niah_multikey_2 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_2/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_multikey_2 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_2/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_multikey_2.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.35s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.10it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.02it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:03<06:33,  3.17s/it]  2%|▏         | 2/125 [00:05<05:31,  2.70s/it]  2%|▏         | 3/125 [00:07<05:05,  2.51s/it]  3%|▎         | 4/125 [00:10<04:54,  2.43s/it]  4%|▍         | 5/125 [00:12<04:47,  2.40s/it]  5%|▍         | 6/125 [00:14<04:41,  2.37s/it]  6%|▌         | 7/125 [00:17<04:37,  2.35s/it]  6%|▋         | 8/125 [00:19<04:33,  2.34s/it]  7%|▋         | 9/125 [00:21<04:30,  2.33s/it]  8%|▊         | 10/125 [00:24<04:26,  2.32s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:26<04:24,  2.32s/it] 10%|▉         | 12/125 [00:28<04:22,  2.32s/it] 10%|█         | 13/125 [00:30<04:19,  2.31s/it] 11%|█         | 14/125 [00:33<04:16,  2.31s/it] 12%|█▏        | 15/125 [00:35<04:14,  2.32s/it] 13%|█▎        | 16/125 [00:37<04:13,  2.32s/it] 14%|█▎        | 17/125 [00:40<04:11,  2.32s/it] 14%|█▍        | 18/125 [00:42<04:09,  2.33s/it] 15%|█▌        | 19/125 [00:44<04:06,  2.33s/it] 16%|█▌        | 20/125 [00:47<04:03,  2.32s/it] 17%|█▋        | 21/125 [00:49<04:00,  2.32s/it] 18%|█▊        | 22/125 [00:51<03:59,  2.32s/it] 18%|█▊        | 23/125 [00:54<03:56,  2.32s/it] 19%|█▉        | 24/125 [00:56<03:54,  2.32s/it] 20%|██        | 25/125 [00:58<03:51,  2.31s/it] 21%|██        | 26/125 [01:01<03:48,  2.31s/it] 22%|██▏       | 27/125 [01:03<03:47,  2.32s/it] 22%|██▏       | 28/125 [01:05<03:44,  2.31s/it] 23%|██▎       | 29/125 [01:08<03:41,  2.31s/it] 24%|██▍       | 30/125 [01:10<03:41,  2.33s/it] 25%|██▍       | 31/125 [01:12<03:39,  2.34s/it] 26%|██▌       | 32/125 [01:15<03:36,  2.32s/it] 26%|██▋       | 33/125 [01:17<03:33,  2.32s/it] 27%|██▋       | 34/125 [01:19<03:30,  2.31s/it] 28%|██▊       | 35/125 [01:22<03:28,  2.31s/it] 29%|██▉       | 36/125 [01:24<03:26,  2.33s/it] 30%|██▉       | 37/125 [01:26<03:24,  2.32s/it] 30%|███       | 38/125 [01:28<03:21,  2.32s/it] 31%|███       | 39/125 [01:31<03:20,  2.34s/it] 32%|███▏      | 40/125 [01:33<03:17,  2.32s/it] 33%|███▎      | 41/125 [01:35<03:14,  2.31s/it] 34%|███▎      | 42/125 [01:38<03:12,  2.32s/it] 34%|███▍      | 43/125 [01:40<03:09,  2.31s/it] 35%|███▌      | 44/125 [01:42<03:06,  2.31s/it] 36%|███▌      | 45/125 [01:45<03:04,  2.30s/it] 37%|███▋      | 46/125 [01:47<03:02,  2.31s/it] 38%|███▊      | 47/125 [01:49<02:59,  2.31s/it] 38%|███▊      | 48/125 [01:52<02:57,  2.31s/it] 39%|███▉      | 49/125 [01:54<02:54,  2.30s/it] 40%|████      | 50/125 [01:56<02:52,  2.31s/it] 41%|████      | 51/125 [01:58<02:50,  2.30s/it] 42%|████▏     | 52/125 [02:01<02:48,  2.31s/it] 42%|████▏     | 53/125 [02:03<02:45,  2.30s/it] 43%|████▎     | 54/125 [02:05<02:44,  2.31s/it] 44%|████▍     | 55/125 [02:08<02:41,  2.31s/it] 45%|████▍     | 56/125 [02:10<02:39,  2.31s/it] 46%|████▌     | 57/125 [02:12<02:37,  2.32s/it] 46%|████▋     | 58/125 [02:15<02:34,  2.31s/it] 47%|████▋     | 59/125 [02:17<02:32,  2.32s/it] 48%|████▊     | 60/125 [02:19<02:31,  2.33s/it] 49%|████▉     | 61/125 [02:22<02:28,  2.33s/it] 50%|████▉     | 62/125 [02:24<02:26,  2.33s/it] 50%|█████     | 63/125 [02:26<02:24,  2.32s/it] 51%|█████     | 64/125 [02:29<02:21,  2.33s/it] 52%|█████▏    | 65/125 [02:31<02:19,  2.32s/it] 53%|█████▎    | 66/125 [02:33<02:17,  2.33s/it] 54%|█████▎    | 67/125 [02:36<02:15,  2.33s/it] 54%|█████▍    | 68/125 [02:38<02:12,  2.33s/it] 55%|█████▌    | 69/125 [02:40<02:11,  2.35s/it] 56%|█████▌    | 70/125 [02:43<02:09,  2.35s/it] 57%|█████▋    | 71/125 [02:45<02:06,  2.35s/it] 58%|█████▊    | 72/125 [02:47<02:03,  2.34s/it] 58%|█████▊    | 73/125 [02:50<02:01,  2.33s/it] 59%|█████▉    | 74/125 [02:52<01:58,  2.33s/it] 60%|██████    | 75/125 [02:54<01:56,  2.32s/it] 61%|██████    | 76/125 [02:57<01:54,  2.34s/it] 62%|██████▏   | 77/125 [02:59<01:52,  2.35s/it] 62%|██████▏   | 78/125 [03:01<01:50,  2.34s/it] 63%|██████▎   | 79/125 [03:04<01:47,  2.34s/it] 64%|██████▍   | 80/125 [03:06<01:44,  2.33s/it] 65%|██████▍   | 81/125 [03:08<01:42,  2.33s/it] 66%|██████▌   | 82/125 [03:11<01:39,  2.32s/it] 66%|██████▋   | 83/125 [03:13<01:37,  2.31s/it] 67%|██████▋   | 84/125 [03:15<01:34,  2.31s/it] 68%|██████▊   | 85/125 [03:18<01:33,  2.33s/it] 69%|██████▉   | 86/125 [03:20<01:30,  2.32s/it] 70%|██████▉   | 87/125 [03:22<01:28,  2.32s/it] 70%|███████   | 88/125 [03:25<01:25,  2.31s/it] 71%|███████   | 89/125 [03:27<01:23,  2.32s/it] 72%|███████▏  | 90/125 [03:29<01:21,  2.33s/it] 73%|███████▎  | 91/125 [03:32<01:18,  2.32s/it] 74%|███████▎  | 92/125 [03:34<01:16,  2.31s/it] 74%|███████▍  | 93/125 [03:36<01:14,  2.32s/it] 75%|███████▌  | 94/125 [03:39<01:12,  2.33s/it] 76%|███████▌  | 95/125 [03:41<01:09,  2.33s/it] 77%|███████▋  | 96/125 [03:43<01:07,  2.32s/it] 78%|███████▊  | 97/125 [03:45<01:04,  2.32s/it] 78%|███████▊  | 98/125 [03:48<01:02,  2.32s/it] 79%|███████▉  | 99/125 [03:50<01:00,  2.32s/it] 80%|████████  | 100/125 [03:52<00:57,  2.32s/it] 81%|████████  | 101/125 [03:55<00:55,  2.31s/it] 82%|████████▏ | 102/125 [03:57<00:53,  2.32s/it] 82%|████████▏ | 103/125 [03:59<00:50,  2.31s/it] 83%|████████▎ | 104/125 [04:02<00:48,  2.32s/it] 84%|████████▍ | 105/125 [04:04<00:46,  2.32s/it] 85%|████████▍ | 106/125 [04:06<00:43,  2.31s/it] 86%|████████▌ | 107/125 [04:09<00:41,  2.33s/it] 86%|████████▋ | 108/125 [04:11<00:39,  2.32s/it] 87%|████████▋ | 109/125 [04:13<00:37,  2.33s/it] 88%|████████▊ | 110/125 [04:16<00:34,  2.32s/it] 89%|████████▉ | 111/125 [04:18<00:32,  2.32s/it] 90%|████████▉ | 112/125 [04:20<00:30,  2.32s/it] 90%|█████████ | 113/125 [04:23<00:27,  2.32s/it] 91%|█████████ | 114/125 [04:25<00:25,  2.31s/it] 92%|█████████▏| 115/125 [04:27<00:23,  2.34s/it] 93%|█████████▎| 116/125 [04:30<00:21,  2.34s/it] 94%|█████████▎| 117/125 [04:32<00:18,  2.33s/it] 94%|█████████▍| 118/125 [04:34<00:16,  2.33s/it] 95%|█████████▌| 119/125 [04:37<00:13,  2.33s/it] 96%|█████████▌| 120/125 [04:39<00:11,  2.33s/it] 97%|█████████▋| 121/125 [04:41<00:09,  2.33s/it] 98%|█████████▊| 122/125 [04:44<00:06,  2.32s/it] 98%|█████████▊| 123/125 [04:46<00:04,  2.31s/it] 99%|█████████▉| 124/125 [04:48<00:02,  2.32s/it]100%|██████████| 125/125 [04:50<00:00,  2.31s/it]100%|██████████| 125/125 [04:50<00:00,  2.33s/it]
Used time: 4.9 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_multikey_3             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack needle --type_needle_k uuids --type_needle_v uuids --num_needle_k 1 --num_needle_v 1 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 2371 | Haystack: 25
Max length 4096 | Current length 4381 | Haystack: 50
Num haystack: 25

Prepare niah_multikey_3 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_3/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_multikey_3 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multikey_3/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_multikey_3.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.43s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.07it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.01s/it]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:06<14:01,  6.79s/it]  2%|▏         | 2/125 [00:12<12:55,  6.31s/it]  2%|▏         | 3/125 [00:18<12:25,  6.11s/it]  3%|▎         | 4/125 [00:24<12:06,  6.00s/it]  4%|▍         | 5/125 [00:30<11:55,  5.96s/it]  5%|▍         | 6/125 [00:36<11:43,  5.92s/it]  6%|▌         | 7/125 [00:42<11:35,  5.90s/it]  6%|▋         | 8/125 [00:47<11:24,  5.85s/it]  7%|▋         | 9/125 [00:53<11:19,  5.85s/it]  8%|▊         | 10/125 [00:59<11:09,  5.82s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [01:05<11:02,  5.81s/it] 10%|▉         | 12/125 [01:11<11:05,  5.89s/it] 10%|█         | 13/125 [01:17<10:55,  5.85s/it] 11%|█         | 14/125 [01:22<10:44,  5.81s/it] 12%|█▏        | 15/125 [01:28<10:41,  5.83s/it] 13%|█▎        | 16/125 [01:34<10:49,  5.96s/it] 14%|█▎        | 17/125 [01:40<10:38,  5.91s/it] 14%|█▍        | 18/125 [01:46<10:26,  5.85s/it] 15%|█▌        | 19/125 [01:52<10:23,  5.88s/it] 16%|█▌        | 20/125 [01:58<10:14,  5.85s/it] 17%|█▋        | 21/125 [02:03<10:08,  5.85s/it] 18%|█▊        | 22/125 [02:09<10:01,  5.84s/it] 18%|█▊        | 23/125 [02:15<09:52,  5.81s/it] 19%|█▉        | 24/125 [02:21<09:44,  5.79s/it] 20%|██        | 25/125 [02:27<09:41,  5.81s/it] 21%|██        | 26/125 [02:32<09:32,  5.79s/it] 22%|██▏       | 27/125 [02:38<09:29,  5.82s/it] 22%|██▏       | 28/125 [02:44<09:22,  5.80s/it] 23%|██▎       | 29/125 [02:50<09:12,  5.76s/it] 24%|██▍       | 30/125 [02:55<09:08,  5.77s/it] 25%|██▍       | 31/125 [03:01<09:07,  5.83s/it] 26%|██▌       | 32/125 [03:07<08:54,  5.74s/it] 26%|██▋       | 33/125 [03:13<08:47,  5.73s/it] 27%|██▋       | 34/125 [03:18<08:41,  5.73s/it] 28%|██▊       | 35/125 [03:24<08:38,  5.76s/it] 29%|██▉       | 36/125 [03:30<08:36,  5.80s/it] 30%|██▉       | 37/125 [03:36<08:27,  5.77s/it] 30%|███       | 38/125 [03:42<08:21,  5.76s/it] 31%|███       | 39/125 [03:48<08:19,  5.81s/it] 32%|███▏      | 40/125 [03:53<08:12,  5.79s/it] 33%|███▎      | 41/125 [03:59<08:07,  5.80s/it] 34%|███▎      | 42/125 [04:05<08:05,  5.85s/it] 34%|███▍      | 43/125 [04:11<08:02,  5.89s/it] 35%|███▌      | 44/125 [04:17<07:58,  5.91s/it] 36%|███▌      | 45/125 [04:23<07:55,  5.95s/it] 37%|███▋      | 46/125 [04:29<07:47,  5.92s/it] 38%|███▊      | 47/125 [04:35<07:38,  5.88s/it] 38%|███▊      | 48/125 [04:41<07:38,  5.95s/it] 39%|███▉      | 49/125 [04:47<07:33,  5.96s/it] 40%|████      | 50/125 [04:53<07:22,  5.91s/it] 41%|████      | 51/125 [04:58<07:14,  5.88s/it] 42%|████▏     | 52/125 [05:04<07:09,  5.88s/it] 42%|████▏     | 53/125 [05:10<06:57,  5.80s/it] 43%|████▎     | 54/125 [05:16<06:54,  5.84s/it] 44%|████▍     | 55/125 [05:22<06:49,  5.85s/it] 45%|████▍     | 56/125 [05:28<06:44,  5.86s/it] 46%|████▌     | 57/125 [05:33<06:39,  5.88s/it] 46%|████▋     | 58/125 [05:39<06:26,  5.77s/it] 47%|████▋     | 59/125 [05:45<06:22,  5.80s/it] 48%|████▊     | 60/125 [05:51<06:17,  5.82s/it] 49%|████▉     | 61/125 [05:56<06:10,  5.79s/it] 50%|████▉     | 62/125 [06:02<06:04,  5.78s/it] 50%|█████     | 63/125 [06:08<06:02,  5.85s/it] 51%|█████     | 64/125 [06:14<05:59,  5.89s/it] 52%|█████▏    | 65/125 [06:20<05:52,  5.88s/it] 53%|█████▎    | 66/125 [06:26<05:41,  5.78s/it] 54%|█████▎    | 67/125 [06:31<05:35,  5.78s/it] 54%|█████▍    | 68/125 [06:37<05:29,  5.78s/it] 55%|█████▌    | 69/125 [06:43<05:23,  5.78s/it] 56%|█████▌    | 70/125 [06:49<05:17,  5.76s/it] 57%|█████▋    | 71/125 [06:54<05:11,  5.77s/it] 58%|█████▊    | 72/125 [07:00<05:06,  5.79s/it] 58%|█████▊    | 73/125 [07:06<05:00,  5.78s/it] 59%|█████▉    | 74/125 [07:12<04:55,  5.80s/it] 60%|██████    | 75/125 [07:17<04:46,  5.73s/it] 61%|██████    | 76/125 [07:23<04:41,  5.74s/it] 62%|██████▏   | 77/125 [07:29<04:37,  5.78s/it] 62%|██████▏   | 78/125 [07:35<04:31,  5.78s/it] 63%|██████▎   | 79/125 [07:41<04:24,  5.75s/it] 64%|██████▍   | 80/125 [07:46<04:17,  5.72s/it] 65%|██████▍   | 81/125 [07:52<04:13,  5.76s/it] 66%|██████▌   | 82/125 [07:58<04:06,  5.74s/it] 66%|██████▋   | 83/125 [08:04<04:02,  5.78s/it] 67%|██████▋   | 84/125 [08:09<03:58,  5.81s/it] 68%|██████▊   | 85/125 [08:15<03:50,  5.77s/it] 69%|██████▉   | 86/125 [08:21<03:46,  5.82s/it] 70%|██████▉   | 87/125 [08:27<03:39,  5.78s/it] 70%|███████   | 88/125 [08:33<03:35,  5.84s/it] 71%|███████   | 89/125 [08:39<03:30,  5.85s/it] 72%|███████▏  | 90/125 [08:45<03:25,  5.86s/it] 73%|███████▎  | 91/125 [08:50<03:17,  5.82s/it] 74%|███████▎  | 92/125 [08:56<03:12,  5.82s/it] 74%|███████▍  | 93/125 [09:02<03:06,  5.83s/it] 75%|███████▌  | 94/125 [09:08<02:59,  5.80s/it] 76%|███████▌  | 95/125 [09:14<02:55,  5.85s/it] 77%|███████▋  | 96/125 [09:20<02:51,  5.93s/it] 78%|███████▊  | 97/125 [09:26<02:46,  5.95s/it] 78%|███████▊  | 98/125 [09:32<02:40,  5.95s/it] 79%|███████▉  | 99/125 [09:38<02:34,  5.94s/it] 80%|████████  | 100/125 [09:43<02:26,  5.85s/it] 81%|████████  | 101/125 [09:49<02:20,  5.84s/it] 82%|████████▏ | 102/125 [09:55<02:14,  5.84s/it] 82%|████████▏ | 103/125 [10:01<02:07,  5.78s/it] 83%|████████▎ | 104/125 [10:06<02:01,  5.78s/it] 84%|████████▍ | 105/125 [10:12<01:54,  5.75s/it] 85%|████████▍ | 106/125 [10:18<01:50,  5.83s/it] 86%|████████▌ | 107/125 [10:24<01:46,  5.94s/it] 86%|████████▋ | 108/125 [10:30<01:39,  5.87s/it] 87%|████████▋ | 109/125 [10:36<01:32,  5.79s/it] 88%|████████▊ | 110/125 [10:41<01:26,  5.76s/it] 89%|████████▉ | 111/125 [10:47<01:21,  5.82s/it] 90%|████████▉ | 112/125 [10:53<01:15,  5.80s/it] 90%|█████████ | 113/125 [10:59<01:09,  5.80s/it] 91%|█████████ | 114/125 [11:05<01:04,  5.82s/it] 92%|█████████▏| 115/125 [11:11<00:58,  5.86s/it] 93%|█████████▎| 116/125 [11:16<00:52,  5.86s/it] 94%|█████████▎| 117/125 [11:22<00:47,  5.91s/it] 94%|█████████▍| 118/125 [11:28<00:41,  5.88s/it] 95%|█████████▌| 119/125 [11:34<00:35,  5.85s/it] 96%|█████████▌| 120/125 [11:40<00:28,  5.79s/it] 97%|█████████▋| 121/125 [11:46<00:23,  5.85s/it] 98%|█████████▊| 122/125 [11:52<00:17,  5.86s/it] 98%|█████████▊| 123/125 [11:57<00:11,  5.77s/it] 99%|█████████▉| 124/125 [12:03<00:05,  5.83s/it]100%|██████████| 125/125 [12:09<00:00,  5.82s/it]100%|██████████| 125/125 [12:09<00:00,  5.84s/it]
Used time: 12.2 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_multivalue             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack essay --type_needle_k words --type_needle_v numbers --num_needle_k 1 --num_needle_v 4 --num_needle_q 1                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 1019 | Haystack: 500
Max length 4096 | Current length 1737 | Haystack: 1000
Max length 4096 | Current length 2412 | Haystack: 1500
Max length 4096 | Current length 3092 | Haystack: 2000
Max length 4096 | Current length 3813 | Haystack: 2500
Max length 4096 | Current length 4510 | Haystack: 3000
Num haystack: 2500

Prepare niah_multivalue with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multivalue/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_multivalue 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multivalue/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_multivalue.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.30s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.18it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.10it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:14<30:40, 14.84s/it]  2%|▏         | 2/125 [00:30<30:50, 15.04s/it]  2%|▏         | 3/125 [00:45<30:36, 15.05s/it]  3%|▎         | 4/125 [00:57<28:29, 14.13s/it]  4%|▍         | 5/125 [01:11<28:04, 14.04s/it]  5%|▍         | 6/125 [01:23<26:36, 13.42s/it]  6%|▌         | 7/125 [01:39<28:02, 14.25s/it]  6%|▋         | 8/125 [01:54<28:13, 14.48s/it]  7%|▋         | 9/125 [02:10<28:36, 14.80s/it]  8%|▊         | 10/125 [02:25<28:26, 14.84s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [02:39<27:36, 14.53s/it] 10%|▉         | 12/125 [02:55<28:20, 15.04s/it] 10%|█         | 13/125 [03:11<28:50, 15.45s/it] 11%|█         | 14/125 [03:25<27:26, 14.83s/it] 12%|█▏        | 15/125 [03:38<26:23, 14.39s/it] 13%|█▎        | 16/125 [03:52<25:50, 14.22s/it] 14%|█▎        | 17/125 [04:05<24:47, 13.78s/it] 14%|█▍        | 18/125 [04:18<24:11, 13.57s/it] 15%|█▌        | 19/125 [04:32<24:24, 13.82s/it] 16%|█▌        | 20/125 [04:46<24:03, 13.75s/it] 17%|█▋        | 21/125 [05:01<24:54, 14.37s/it] 18%|█▊        | 22/125 [05:17<25:20, 14.76s/it] 18%|█▊        | 23/125 [05:32<24:58, 14.69s/it] 19%|█▉        | 24/125 [05:46<24:24, 14.50s/it] 20%|██        | 25/125 [05:59<23:39, 14.20s/it] 21%|██        | 26/125 [06:13<23:25, 14.20s/it] 22%|██▏       | 27/125 [06:26<22:15, 13.63s/it] 22%|██▏       | 28/125 [06:41<22:43, 14.06s/it] 23%|██▎       | 29/125 [06:55<22:26, 14.02s/it] 24%|██▍       | 30/125 [07:08<21:39, 13.68s/it] 25%|██▍       | 31/125 [07:21<21:19, 13.61s/it] 26%|██▌       | 32/125 [07:36<21:40, 13.99s/it] 26%|██▋       | 33/125 [07:52<22:28, 14.66s/it] 27%|██▋       | 34/125 [08:08<22:37, 14.92s/it] 28%|██▊       | 35/125 [08:21<21:42, 14.47s/it] 29%|██▉       | 36/125 [08:37<22:04, 14.88s/it] 30%|██▉       | 37/125 [08:52<21:59, 14.99s/it] 30%|███       | 38/125 [09:04<20:34, 14.20s/it] 31%|███       | 39/125 [09:20<20:49, 14.53s/it] 32%|███▏      | 40/125 [09:36<21:12, 14.97s/it] 33%|███▎      | 41/125 [09:50<20:37, 14.73s/it] 34%|███▎      | 42/125 [10:04<20:08, 14.56s/it] 34%|███▍      | 43/125 [10:20<20:31, 15.02s/it] 35%|███▌      | 44/125 [10:35<20:22, 15.09s/it] 36%|███▌      | 45/125 [10:50<19:50, 14.88s/it] 37%|███▋      | 46/125 [11:03<18:56, 14.38s/it] 38%|███▊      | 47/125 [11:18<18:57, 14.58s/it] 38%|███▊      | 48/125 [11:35<19:38, 15.30s/it] 39%|███▉      | 49/125 [11:50<19:14, 15.19s/it] 40%|████      | 50/125 [12:06<19:13, 15.38s/it] 41%|████      | 51/125 [12:22<19:17, 15.64s/it] 42%|████▏     | 52/125 [12:38<18:57, 15.58s/it] 42%|████▏     | 53/125 [12:53<18:39, 15.55s/it] 43%|████▎     | 54/125 [13:08<18:12, 15.39s/it] 44%|████▍     | 55/125 [13:22<17:17, 14.82s/it] 45%|████▍     | 56/125 [13:36<16:53, 14.69s/it] 46%|████▌     | 57/125 [13:49<15:56, 14.07s/it] 46%|████▋     | 58/125 [14:06<16:45, 15.00s/it] 47%|████▋     | 59/125 [14:19<16:05, 14.63s/it] 48%|████▊     | 60/125 [14:35<16:14, 14.99s/it] 49%|████▉     | 61/125 [14:50<15:53, 14.90s/it] 50%|████▉     | 62/125 [15:03<14:58, 14.27s/it] 50%|█████     | 63/125 [15:17<14:42, 14.23s/it] 51%|█████     | 64/125 [15:33<15:03, 14.81s/it] 52%|█████▏    | 65/125 [15:49<14:59, 14.99s/it] 53%|█████▎    | 66/125 [16:04<14:45, 15.01s/it] 54%|█████▎    | 67/125 [16:18<14:21, 14.85s/it] 54%|█████▍    | 68/125 [16:31<13:26, 14.15s/it] 55%|█████▌    | 69/125 [16:45<13:23, 14.35s/it] 56%|█████▌    | 70/125 [16:57<12:28, 13.62s/it] 57%|█████▋    | 71/125 [17:12<12:35, 13.99s/it] 58%|█████▊    | 72/125 [17:23<11:26, 12.95s/it] 58%|█████▊    | 73/125 [17:37<11:39, 13.46s/it] 59%|█████▉    | 74/125 [17:53<11:55, 14.02s/it] 60%|██████    | 75/125 [18:03<10:45, 12.92s/it] 61%|██████    | 76/125 [18:19<11:11, 13.70s/it] 62%|██████▏   | 77/125 [18:32<10:49, 13.54s/it] 62%|██████▏   | 78/125 [18:48<11:16, 14.40s/it] 63%|██████▎   | 79/125 [19:01<10:47, 14.08s/it] 64%|██████▍   | 80/125 [19:14<10:09, 13.55s/it] 65%|██████▍   | 81/125 [19:27<09:54, 13.52s/it] 66%|██████▌   | 82/125 [19:41<09:39, 13.47s/it] 66%|██████▋   | 83/125 [19:55<09:41, 13.86s/it] 67%|██████▋   | 84/125 [20:12<10:07, 14.81s/it] 68%|██████▊   | 85/125 [20:28<10:06, 15.17s/it] 69%|██████▉   | 86/125 [20:44<09:53, 15.22s/it] 70%|██████▉   | 87/125 [20:56<09:07, 14.41s/it] 70%|███████   | 88/125 [21:12<09:09, 14.86s/it] 71%|███████   | 89/125 [21:27<08:58, 14.95s/it] 72%|███████▏  | 90/125 [21:42<08:42, 14.94s/it] 73%|███████▎  | 91/125 [21:56<08:21, 14.74s/it] 74%|███████▎  | 92/125 [22:11<08:02, 14.62s/it] 74%|███████▍  | 93/125 [22:27<08:02, 15.06s/it] 75%|███████▌  | 94/125 [22:41<07:36, 14.73s/it] 76%|███████▌  | 95/125 [22:54<07:09, 14.32s/it] 77%|███████▋  | 96/125 [23:09<06:57, 14.41s/it] 78%|███████▊  | 97/125 [23:23<06:38, 14.23s/it] 78%|███████▊  | 98/125 [23:36<06:19, 14.05s/it] 79%|███████▉  | 99/125 [23:50<06:06, 14.10s/it] 80%|████████  | 100/125 [24:05<05:58, 14.36s/it] 81%|████████  | 101/125 [24:20<05:43, 14.30s/it] 82%|████████▏ | 102/125 [24:33<05:24, 14.09s/it] 82%|████████▏ | 103/125 [24:46<05:03, 13.82s/it] 83%|████████▎ | 104/125 [25:01<04:52, 13.93s/it] 84%|████████▍ | 105/125 [25:13<04:30, 13.54s/it] 85%|████████▍ | 106/125 [25:27<04:18, 13.62s/it] 86%|████████▌ | 107/125 [25:40<03:59, 13.31s/it] 86%|████████▋ | 108/125 [25:54<03:51, 13.62s/it] 87%|████████▋ | 109/125 [26:08<03:39, 13.70s/it] 88%|████████▊ | 110/125 [26:20<03:18, 13.26s/it] 89%|████████▉ | 111/125 [26:36<03:15, 13.93s/it] 90%|████████▉ | 112/125 [26:49<03:01, 13.93s/it] 90%|█████████ | 113/125 [27:03<02:44, 13.69s/it] 91%|█████████ | 114/125 [27:20<02:41, 14.66s/it] 92%|█████████▏| 115/125 [27:32<02:21, 14.12s/it] 93%|█████████▎| 116/125 [27:48<02:11, 14.65s/it] 94%|█████████▎| 117/125 [28:02<01:56, 14.51s/it] 94%|█████████▍| 118/125 [28:15<01:37, 13.86s/it] 95%|█████████▌| 119/125 [28:28<01:22, 13.69s/it] 96%|█████████▌| 120/125 [28:41<01:07, 13.52s/it] 97%|█████████▋| 121/125 [28:56<00:56, 14.01s/it] 98%|█████████▊| 122/125 [29:12<00:43, 14.45s/it] 98%|█████████▊| 123/125 [29:26<00:28, 14.38s/it] 99%|█████████▉| 124/125 [29:39<00:13, 13.93s/it]100%|██████████| 125/125 [29:51<00:00, 13.29s/it]100%|██████████| 125/125 [29:51<00:00, 14.33s/it]
Used time: 29.9 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/niah.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name niah_multiquery             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 128             --num_samples 500             --random_seed 42             --type_haystack essay --type_needle_k words --type_needle_v numbers --num_needle_k 1 --num_needle_v 1 --num_needle_q 4                                       --template "<|user|>
Some special magic {type_needle_v} are hidden within the following text. Make sure to memorize it. I will quiz you about the {type_needle_v} afterwards.
{context}
What are all the special magic {type_needle_v} for {query} mentioned in the provided text?<|end|>
<|assistant|>
 The special magic {type_needle_v} for {query} mentioned in the provided text are"
            
Output:
Max length 4096 | Current length 1072 | Haystack: 500
Max length 4096 | Current length 1766 | Haystack: 1000
Max length 4096 | Current length 2472 | Haystack: 1500
Max length 4096 | Current length 3133 | Haystack: 2000
Max length 4096 | Current length 3845 | Haystack: 2500
Max length 4096 | Current length 4530 | Haystack: 3000
Num haystack: 2500

Prepare niah_multiquery with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multiquery/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict niah_multiquery 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/niah_multiquery/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/niah_multiquery.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.39s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.10it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.02it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:19<39:33, 19.14s/it]  2%|▏         | 2/125 [00:37<38:01, 18.55s/it]  2%|▏         | 3/125 [00:55<37:14, 18.32s/it]  3%|▎         | 4/125 [01:12<35:58, 17.84s/it]  4%|▍         | 5/125 [01:29<35:22, 17.69s/it]  5%|▍         | 6/125 [01:47<35:01, 17.66s/it]  6%|▌         | 7/125 [02:04<34:04, 17.33s/it]  6%|▋         | 8/125 [02:20<33:27, 17.16s/it]  7%|▋         | 9/125 [02:38<33:32, 17.35s/it]  8%|▊         | 10/125 [02:55<32:49, 17.13s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [03:12<32:21, 17.03s/it] 10%|▉         | 12/125 [03:28<31:52, 16.93s/it] 10%|█         | 13/125 [03:45<31:16, 16.75s/it] 11%|█         | 14/125 [04:02<31:31, 17.04s/it] 12%|█▏        | 15/125 [04:19<30:46, 16.78s/it] 13%|█▎        | 16/125 [04:35<30:26, 16.76s/it] 14%|█▎        | 17/125 [04:51<29:39, 16.48s/it] 14%|█▍        | 18/125 [05:08<29:31, 16.55s/it] 15%|█▌        | 19/125 [05:24<29:15, 16.56s/it] 16%|█▌        | 20/125 [05:40<28:40, 16.38s/it] 17%|█▋        | 21/125 [05:59<29:37, 17.09s/it] 18%|█▊        | 22/125 [06:17<29:32, 17.21s/it] 18%|█▊        | 23/125 [06:34<29:20, 17.26s/it] 19%|█▉        | 24/125 [06:51<29:09, 17.32s/it] 20%|██        | 25/125 [07:10<29:25, 17.66s/it] 21%|██        | 26/125 [07:28<29:08, 17.66s/it] 22%|██▏       | 27/125 [07:44<28:21, 17.37s/it] 22%|██▏       | 28/125 [08:02<28:24, 17.57s/it] 23%|██▎       | 29/125 [08:18<27:18, 17.07s/it] 24%|██▍       | 30/125 [08:36<27:33, 17.40s/it] 25%|██▍       | 31/125 [08:54<27:27, 17.53s/it] 26%|██▌       | 32/125 [09:11<26:49, 17.31s/it] 26%|██▋       | 33/125 [09:26<25:43, 16.78s/it] 27%|██▋       | 34/125 [09:44<25:36, 16.88s/it] 28%|██▊       | 35/125 [10:02<25:56, 17.29s/it] 29%|██▉       | 36/125 [10:17<24:38, 16.61s/it] 30%|██▉       | 37/125 [10:34<24:36, 16.78s/it] 30%|███       | 38/125 [10:51<24:18, 16.77s/it] 31%|███       | 39/125 [11:08<24:20, 16.98s/it] 32%|███▏      | 40/125 [11:25<23:44, 16.76s/it] 33%|███▎      | 41/125 [11:41<23:30, 16.79s/it] 34%|███▎      | 42/125 [11:59<23:24, 16.92s/it] 34%|███▍      | 43/125 [12:16<23:23, 17.12s/it] 35%|███▌      | 44/125 [12:34<23:24, 17.34s/it] 36%|███▌      | 45/125 [12:50<22:26, 16.84s/it] 37%|███▋      | 46/125 [13:07<22:09, 16.83s/it] 38%|███▊      | 47/125 [13:23<21:46, 16.75s/it] 38%|███▊      | 48/125 [13:40<21:31, 16.77s/it] 39%|███▉      | 49/125 [13:57<21:28, 16.95s/it] 40%|████      | 50/125 [14:15<21:19, 17.06s/it] 41%|████      | 51/125 [14:32<21:01, 17.05s/it] 42%|████▏     | 52/125 [14:48<20:39, 16.98s/it] 42%|████▏     | 53/125 [15:05<20:15, 16.88s/it] 43%|████▎     | 54/125 [15:23<20:17, 17.15s/it] 44%|████▍     | 55/125 [15:40<19:53, 17.05s/it] 45%|████▍     | 56/125 [15:55<19:06, 16.62s/it] 46%|████▌     | 57/125 [16:11<18:41, 16.49s/it] 46%|████▋     | 58/125 [16:29<18:38, 16.69s/it] 47%|████▋     | 59/125 [16:45<18:08, 16.49s/it] 48%|████▊     | 60/125 [16:59<17:07, 15.81s/it] 49%|████▉     | 61/125 [17:16<17:22, 16.29s/it] 50%|████▉     | 62/125 [17:32<17:00, 16.20s/it] 50%|█████     | 63/125 [17:48<16:37, 16.09s/it] 51%|█████     | 64/125 [18:05<16:40, 16.40s/it] 52%|█████▏    | 65/125 [18:22<16:25, 16.42s/it] 53%|█████▎    | 66/125 [18:40<16:36, 16.89s/it] 54%|█████▎    | 67/125 [18:56<16:14, 16.81s/it] 54%|█████▍    | 68/125 [19:14<16:07, 16.97s/it] 55%|█████▌    | 69/125 [19:29<15:28, 16.59s/it] 56%|█████▌    | 70/125 [19:46<15:06, 16.49s/it] 57%|█████▋    | 71/125 [20:02<14:48, 16.45s/it] 58%|█████▊    | 72/125 [20:18<14:30, 16.43s/it] 58%|█████▊    | 73/125 [20:35<14:15, 16.45s/it] 59%|█████▉    | 74/125 [20:51<14:00, 16.48s/it] 60%|██████    | 75/125 [21:09<14:01, 16.83s/it] 61%|██████    | 76/125 [21:25<13:39, 16.71s/it] 62%|██████▏   | 77/125 [21:42<13:25, 16.79s/it] 62%|██████▏   | 78/125 [21:59<13:05, 16.71s/it] 63%|██████▎   | 79/125 [22:16<12:51, 16.76s/it] 64%|██████▍   | 80/125 [22:32<12:26, 16.58s/it] 65%|██████▍   | 81/125 [22:48<11:59, 16.36s/it] 66%|██████▌   | 82/125 [23:04<11:43, 16.35s/it] 66%|██████▋   | 83/125 [23:21<11:26, 16.34s/it] 67%|██████▋   | 84/125 [23:37<11:11, 16.37s/it] 68%|██████▊   | 85/125 [23:54<11:06, 16.67s/it] 69%|██████▉   | 86/125 [24:11<10:48, 16.63s/it] 70%|██████▉   | 87/125 [24:27<10:21, 16.36s/it] 70%|███████   | 88/125 [24:42<09:59, 16.19s/it] 71%|███████   | 89/125 [24:58<09:40, 16.12s/it] 72%|███████▏  | 90/125 [25:14<09:21, 16.05s/it] 73%|███████▎  | 91/125 [25:31<09:12, 16.25s/it] 74%|███████▎  | 92/125 [25:47<08:59, 16.34s/it] 74%|███████▍  | 93/125 [26:04<08:44, 16.39s/it] 75%|███████▌  | 94/125 [26:22<08:42, 16.85s/it] 76%|███████▌  | 95/125 [26:39<08:24, 16.82s/it] 77%|███████▋  | 96/125 [26:56<08:14, 17.05s/it] 78%|███████▊  | 97/125 [27:13<07:58, 17.10s/it] 78%|███████▊  | 98/125 [27:30<07:34, 16.83s/it] 79%|███████▉  | 99/125 [27:46<07:11, 16.60s/it] 80%|████████  | 100/125 [28:03<06:59, 16.77s/it] 81%|████████  | 101/125 [28:19<06:35, 16.47s/it] 82%|████████▏ | 102/125 [28:36<06:23, 16.66s/it] 82%|████████▏ | 103/125 [28:50<05:53, 16.06s/it] 83%|████████▎ | 104/125 [29:08<05:44, 16.39s/it] 84%|████████▍ | 105/125 [29:23<05:24, 16.22s/it] 85%|████████▍ | 106/125 [29:40<05:10, 16.35s/it] 86%|████████▌ | 107/125 [29:57<04:58, 16.59s/it] 86%|████████▋ | 108/125 [30:13<04:39, 16.45s/it] 87%|████████▋ | 109/125 [30:30<04:26, 16.65s/it] 88%|████████▊ | 110/125 [30:47<04:11, 16.76s/it] 89%|████████▉ | 111/125 [31:04<03:52, 16.64s/it] 90%|████████▉ | 112/125 [31:21<03:36, 16.66s/it] 90%|█████████ | 113/125 [31:37<03:17, 16.48s/it] 91%|█████████ | 114/125 [31:54<03:04, 16.77s/it] 92%|█████████▏| 115/125 [32:11<02:49, 16.91s/it] 93%|█████████▎| 116/125 [32:27<02:30, 16.70s/it] 94%|█████████▎| 117/125 [32:45<02:16, 17.05s/it] 94%|█████████▍| 118/125 [33:02<01:57, 16.79s/it] 95%|█████████▌| 119/125 [33:17<01:39, 16.54s/it] 96%|█████████▌| 120/125 [33:33<01:21, 16.26s/it] 97%|█████████▋| 121/125 [33:49<01:04, 16.09s/it] 98%|█████████▊| 122/125 [34:05<00:48, 16.19s/it] 98%|█████████▊| 123/125 [34:22<00:32, 16.35s/it] 99%|█████████▉| 124/125 [34:38<00:16, 16.26s/it]100%|██████████| 125/125 [34:56<00:00, 16.65s/it]100%|██████████| 125/125 [34:56<00:00, 16.77s/it]
Used time: 35.0 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/variable_tracking.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name vt             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 30             --num_samples 500             --random_seed 42             --num_chains 1 --num_hops 4                                       --template "<|user|>
Memorize and track the chain(s) of variable assignment hidden in the following text.

{context}
Question: Find all variables that are assigned the value {query} in the text above.<|end|>
<|assistant|>
 Answer: According to the chain(s) of variable assignment in the text above, {num_v} variables are assgined the value {query}, they are: "
            
Output:
Max length 500 | Current length 325 | Noises: 5
Max length 500 | Current length 435 | Noises: 10
Max length 500 | Current length 559 | Noises: 15
Num noises: 10
Max length 4096 | Current length 856 | Noises: 10
Max length 4096 | Current length 1104 | Noises: 20
Max length 4096 | Current length 1352 | Noises: 30
Max length 4096 | Current length 1609 | Noises: 40
Max length 4096 | Current length 1860 | Noises: 50
Max length 4096 | Current length 2110 | Noises: 60
Max length 4096 | Current length 2359 | Noises: 70
Max length 4096 | Current length 2603 | Noises: 80
Max length 4096 | Current length 2857 | Noises: 90
Max length 4096 | Current length 3112 | Noises: 100
Max length 4096 | Current length 3358 | Noises: 110
Max length 4096 | Current length 3604 | Noises: 120
Max length 4096 | Current length 3859 | Noises: 130
Max length 4096 | Current length 4103 | Noises: 140
Num noises: 130

Prepare vt with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/vt/validation.jsonl
Used time: 0.1 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict vt 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/vt/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/vt.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.32s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.12it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.04it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:06<12:56,  6.26s/it]  2%|▏         | 2/125 [00:11<11:22,  5.55s/it]  2%|▏         | 3/125 [00:16<10:55,  5.37s/it]  3%|▎         | 4/125 [00:21<10:42,  5.31s/it]  4%|▍         | 5/125 [00:26<10:31,  5.26s/it]  5%|▍         | 6/125 [00:31<10:19,  5.21s/it]  6%|▌         | 7/125 [00:37<10:14,  5.21s/it]  6%|▋         | 8/125 [00:42<10:09,  5.21s/it]  7%|▋         | 9/125 [00:47<10:04,  5.21s/it]  8%|▊         | 10/125 [00:52<09:59,  5.21s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:58<09:54,  5.21s/it] 10%|▉         | 12/125 [01:03<09:48,  5.21s/it] 10%|█         | 13/125 [01:08<09:44,  5.22s/it] 11%|█         | 14/125 [01:13<09:41,  5.23s/it] 12%|█▏        | 15/125 [01:18<09:35,  5.23s/it] 13%|█▎        | 16/125 [01:24<09:32,  5.25s/it] 14%|█▎        | 17/125 [01:29<09:27,  5.25s/it] 14%|█▍        | 18/125 [01:34<09:22,  5.26s/it] 15%|█▌        | 19/125 [01:40<09:17,  5.26s/it] 16%|█▌        | 20/125 [01:45<09:10,  5.24s/it] 17%|█▋        | 21/125 [01:50<09:01,  5.20s/it] 18%|█▊        | 22/125 [01:55<08:57,  5.22s/it] 18%|█▊        | 23/125 [02:00<08:51,  5.21s/it] 19%|█▉        | 24/125 [02:05<08:40,  5.16s/it] 20%|██        | 25/125 [02:11<08:38,  5.18s/it] 21%|██        | 26/125 [02:16<08:35,  5.21s/it] 22%|██▏       | 27/125 [02:21<08:30,  5.21s/it] 22%|██▏       | 28/125 [02:26<08:25,  5.22s/it] 23%|██▎       | 29/125 [02:32<08:21,  5.22s/it] 24%|██▍       | 30/125 [02:37<08:16,  5.23s/it] 25%|██▍       | 31/125 [02:42<08:07,  5.19s/it] 26%|██▌       | 32/125 [02:47<08:01,  5.18s/it] 26%|██▋       | 33/125 [02:52<07:57,  5.19s/it] 27%|██▋       | 34/125 [02:57<07:52,  5.20s/it] 28%|██▊       | 35/125 [03:03<07:48,  5.20s/it] 29%|██▉       | 36/125 [03:08<07:45,  5.23s/it] 30%|██▉       | 37/125 [03:13<07:41,  5.25s/it] 30%|███       | 38/125 [03:18<07:35,  5.23s/it] 31%|███       | 39/125 [03:24<07:30,  5.24s/it] 32%|███▏      | 40/125 [03:29<07:20,  5.19s/it] 33%|███▎      | 41/125 [03:34<07:20,  5.25s/it] 34%|███▎      | 42/125 [03:39<07:15,  5.25s/it] 34%|███▍      | 43/125 [03:44<07:02,  5.16s/it] 35%|███▌      | 44/125 [03:49<06:55,  5.13s/it] 36%|███▌      | 45/125 [03:55<06:53,  5.17s/it] 37%|███▋      | 46/125 [04:00<06:49,  5.18s/it] 38%|███▊      | 47/125 [04:05<06:43,  5.18s/it] 38%|███▊      | 48/125 [04:10<06:34,  5.13s/it] 39%|███▉      | 49/125 [04:15<06:31,  5.15s/it] 40%|████      | 50/125 [04:21<06:28,  5.18s/it] 41%|████      | 51/125 [04:26<06:25,  5.21s/it] 42%|████▏     | 52/125 [04:31<06:22,  5.23s/it] 42%|████▏     | 53/125 [04:36<06:16,  5.23s/it] 43%|████▎     | 54/125 [04:42<06:13,  5.25s/it] 44%|████▍     | 55/125 [04:47<06:06,  5.23s/it] 45%|████▍     | 56/125 [04:52<06:01,  5.24s/it] 46%|████▌     | 57/125 [04:57<05:56,  5.24s/it] 46%|████▋     | 58/125 [05:03<05:50,  5.23s/it] 47%|████▋     | 59/125 [05:08<05:45,  5.23s/it] 48%|████▊     | 60/125 [05:13<05:40,  5.24s/it] 49%|████▉     | 61/125 [05:18<05:33,  5.21s/it] 50%|████▉     | 62/125 [05:24<05:30,  5.25s/it] 50%|█████     | 63/125 [05:29<05:24,  5.24s/it] 51%|█████     | 64/125 [05:34<05:18,  5.22s/it] 52%|█████▏    | 65/125 [05:39<05:14,  5.24s/it] 53%|█████▎    | 66/125 [05:44<05:08,  5.23s/it] 54%|█████▎    | 67/125 [05:50<05:03,  5.24s/it] 54%|█████▍    | 68/125 [05:55<04:58,  5.24s/it] 55%|█████▌    | 69/125 [06:00<04:54,  5.26s/it] 56%|█████▌    | 70/125 [06:05<04:47,  5.24s/it] 57%|█████▋    | 71/125 [06:11<04:42,  5.23s/it] 58%|█████▊    | 72/125 [06:16<04:37,  5.24s/it] 58%|█████▊    | 73/125 [06:21<04:33,  5.25s/it] 59%|█████▉    | 74/125 [06:26<04:25,  5.21s/it] 60%|██████    | 75/125 [06:31<04:20,  5.21s/it] 61%|██████    | 76/125 [06:37<04:15,  5.22s/it] 62%|██████▏   | 77/125 [06:42<04:07,  5.16s/it] 62%|██████▏   | 78/125 [06:47<04:01,  5.14s/it] 63%|██████▎   | 79/125 [06:52<03:58,  5.18s/it] 64%|██████▍   | 80/125 [06:57<03:54,  5.20s/it] 65%|██████▍   | 81/125 [07:03<03:49,  5.21s/it] 66%|██████▌   | 82/125 [07:08<03:44,  5.21s/it] 66%|██████▋   | 83/125 [07:13<03:37,  5.18s/it] 67%|██████▋   | 84/125 [07:18<03:33,  5.20s/it] 68%|██████▊   | 85/125 [07:23<03:29,  5.24s/it] 69%|██████▉   | 86/125 [07:29<03:24,  5.25s/it] 70%|██████▉   | 87/125 [07:34<03:18,  5.23s/it] 70%|███████   | 88/125 [07:39<03:13,  5.23s/it] 71%|███████   | 89/125 [07:44<03:08,  5.24s/it] 72%|███████▏  | 90/125 [07:50<03:03,  5.23s/it] 73%|███████▎  | 91/125 [07:55<02:58,  5.24s/it] 74%|███████▎  | 92/125 [08:00<02:52,  5.22s/it] 74%|███████▍  | 93/125 [08:05<02:47,  5.23s/it] 75%|███████▌  | 94/125 [08:11<02:42,  5.24s/it] 76%|███████▌  | 95/125 [08:16<02:36,  5.20s/it] 77%|███████▋  | 96/125 [08:21<02:30,  5.19s/it] 78%|███████▊  | 97/125 [08:26<02:23,  5.13s/it] 78%|███████▊  | 98/125 [08:31<02:19,  5.15s/it] 79%|███████▉  | 99/125 [08:36<02:15,  5.23s/it] 80%|████████  | 100/125 [08:42<02:10,  5.22s/it] 81%|████████  | 101/125 [08:47<02:04,  5.19s/it] 82%|████████▏ | 102/125 [08:52<01:59,  5.19s/it] 82%|████████▏ | 103/125 [08:57<01:54,  5.19s/it] 83%|████████▎ | 104/125 [09:02<01:49,  5.21s/it] 84%|████████▍ | 105/125 [09:08<01:43,  5.19s/it] 85%|████████▍ | 106/125 [09:13<01:38,  5.18s/it] 86%|████████▌ | 107/125 [09:18<01:32,  5.14s/it] 86%|████████▋ | 108/125 [09:23<01:27,  5.17s/it] 87%|████████▋ | 109/125 [09:28<01:22,  5.13s/it] 88%|████████▊ | 110/125 [09:33<01:17,  5.18s/it] 89%|████████▉ | 111/125 [09:39<01:13,  5.22s/it] 90%|████████▉ | 112/125 [09:44<01:07,  5.16s/it] 90%|█████████ | 113/125 [09:49<01:02,  5.18s/it] 91%|█████████ | 114/125 [09:54<00:57,  5.19s/it] 92%|█████████▏| 115/125 [09:59<00:51,  5.14s/it] 93%|█████████▎| 116/125 [10:04<00:46,  5.14s/it] 94%|█████████▎| 117/125 [10:09<00:41,  5.15s/it] 94%|█████████▍| 118/125 [10:14<00:35,  5.11s/it] 95%|█████████▌| 119/125 [10:20<00:30,  5.16s/it] 96%|█████████▌| 120/125 [10:25<00:25,  5.13s/it] 97%|█████████▋| 121/125 [10:30<00:20,  5.17s/it] 98%|█████████▊| 122/125 [10:35<00:15,  5.19s/it] 98%|█████████▊| 123/125 [10:41<00:10,  5.21s/it] 99%|█████████▉| 124/125 [10:46<00:05,  5.23s/it]100%|██████████| 125/125 [10:51<00:00,  5.24s/it]100%|██████████| 125/125 [10:51<00:00,  5.21s/it]
Used time: 10.9 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/common_words_extraction.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name cwe             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 120             --num_samples 500             --random_seed 42             --freq_cw 30 --freq_ucw 3 --num_cw 10                                       --template "<|user|>
Below is a numbered list of words. In these words, some appear more often than others. Memorize the ones that appear most often.
{context}
Question: What are the 10 most common words in the above list?<|end|>
<|assistant|>
 Answer: The top 10 words that appear most often in the list are:"
            
Output:
Max length 4096 | Current length 3442 | Words: 10
Max length 4096 | Current length 3790 | Words: 20
Max length 4096 | Current length 4084 | Words: 30
Max length 4096 | Current length 4052 | Words: 40
Max length 4096 | Current length 4401 | Words: 50
num_words: 40

Prepare cwe with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/cwe/validation.jsonl
Used time: 0.1 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict cwe 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/cwe/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/cwe.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.41s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.07it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.01s/it]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:14<29:23, 14.23s/it]  2%|▏         | 2/125 [00:22<22:27, 10.95s/it]  2%|▏         | 3/125 [00:38<26:37, 13.09s/it]  3%|▎         | 4/125 [00:51<26:06, 12.94s/it]  4%|▍         | 5/125 [00:59<22:34, 11.29s/it]  5%|▍         | 6/125 [01:09<21:28, 10.83s/it]  6%|▌         | 7/125 [01:20<21:23, 10.87s/it]  6%|▋         | 8/125 [01:30<20:48, 10.67s/it]  7%|▋         | 9/125 [01:42<21:31, 11.14s/it]  8%|▊         | 10/125 [01:55<22:24, 11.69s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [02:05<21:17, 11.20s/it] 10%|▉         | 12/125 [02:19<22:37, 12.01s/it] 10%|█         | 13/125 [02:29<21:21, 11.45s/it] 11%|█         | 14/125 [02:40<20:52, 11.29s/it] 12%|█▏        | 15/125 [02:52<20:38, 11.26s/it] 13%|█▎        | 16/125 [03:05<21:46, 11.99s/it] 14%|█▎        | 17/125 [03:16<20:44, 11.53s/it] 14%|█▍        | 18/125 [03:26<20:07, 11.29s/it] 15%|█▌        | 19/125 [03:42<22:14, 12.59s/it] 16%|█▌        | 20/125 [03:51<20:18, 11.61s/it] 17%|█▋        | 21/125 [04:01<19:19, 11.15s/it] 18%|█▊        | 22/125 [04:14<19:49, 11.55s/it] 18%|█▊        | 23/125 [04:22<18:03, 10.62s/it] 19%|█▉        | 24/125 [04:33<17:56, 10.66s/it] 20%|██        | 25/125 [04:50<20:41, 12.41s/it] 21%|██        | 26/125 [04:59<18:46, 11.38s/it] 22%|██▏       | 27/125 [05:09<18:17, 11.20s/it] 22%|██▏       | 28/125 [05:24<19:39, 12.16s/it] 23%|██▎       | 29/125 [05:35<19:14, 12.02s/it] 24%|██▍       | 30/125 [05:48<19:24, 12.26s/it] 25%|██▍       | 31/125 [06:02<19:52, 12.69s/it] 26%|██▌       | 32/125 [06:13<18:50, 12.16s/it] 26%|██▋       | 33/125 [06:25<18:26, 12.02s/it] 27%|██▋       | 34/125 [06:38<18:48, 12.40s/it] 28%|██▊       | 35/125 [06:47<17:10, 11.45s/it] 29%|██▉       | 36/125 [06:56<15:48, 10.66s/it] 30%|██▉       | 37/125 [07:09<16:40, 11.37s/it] 30%|███       | 38/125 [07:20<16:21, 11.28s/it] 31%|███       | 39/125 [07:34<17:24, 12.14s/it] 32%|███▏      | 40/125 [07:45<16:39, 11.76s/it] 33%|███▎      | 41/125 [07:56<16:17, 11.64s/it] 34%|███▎      | 42/125 [08:08<16:07, 11.66s/it] 34%|███▍      | 43/125 [08:21<16:17, 11.92s/it] 35%|███▌      | 44/125 [08:30<14:59, 11.10s/it] 36%|███▌      | 45/125 [08:42<15:23, 11.54s/it] 37%|███▋      | 46/125 [08:55<15:39, 11.90s/it] 38%|███▊      | 47/125 [09:08<15:47, 12.15s/it] 38%|███▊      | 48/125 [09:22<16:31, 12.88s/it] 39%|███▉      | 49/125 [09:34<15:39, 12.36s/it] 40%|████      | 50/125 [09:45<15:16, 12.22s/it] 41%|████      | 51/125 [10:02<16:42, 13.55s/it] 42%|████▏     | 52/125 [10:14<15:45, 12.95s/it] 42%|████▏     | 53/125 [10:30<16:46, 13.98s/it] 43%|████▎     | 54/125 [10:45<16:59, 14.36s/it] 44%|████▍     | 55/125 [10:56<15:24, 13.21s/it] 45%|████▍     | 56/125 [11:08<14:42, 12.80s/it] 46%|████▌     | 57/125 [11:21<14:46, 13.04s/it] 46%|████▋     | 58/125 [11:31<13:35, 12.17s/it] 47%|████▋     | 59/125 [11:43<13:17, 12.08s/it] 48%|████▊     | 60/125 [11:55<12:50, 11.86s/it] 49%|████▉     | 61/125 [12:07<12:42, 11.91s/it] 50%|████▉     | 62/125 [12:17<11:58, 11.40s/it] 50%|█████     | 63/125 [12:26<11:03, 10.70s/it] 51%|█████     | 64/125 [12:37<11:08, 10.95s/it] 52%|█████▏    | 65/125 [12:50<11:29, 11.50s/it] 53%|█████▎    | 66/125 [13:00<10:40, 10.86s/it] 54%|█████▎    | 67/125 [13:12<10:53, 11.27s/it] 54%|█████▍    | 68/125 [13:23<10:32, 11.10s/it] 55%|█████▌    | 69/125 [13:34<10:25, 11.17s/it] 56%|█████▌    | 70/125 [13:49<11:11, 12.21s/it] 57%|█████▋    | 71/125 [13:59<10:23, 11.54s/it] 58%|█████▊    | 72/125 [14:09<09:51, 11.16s/it] 58%|█████▊    | 73/125 [14:20<09:41, 11.18s/it] 59%|█████▉    | 74/125 [14:33<09:51, 11.60s/it] 60%|██████    | 75/125 [14:43<09:15, 11.11s/it] 61%|██████    | 76/125 [14:53<08:57, 10.96s/it] 62%|██████▏   | 77/125 [15:07<09:31, 11.90s/it] 62%|██████▏   | 78/125 [15:18<08:56, 11.42s/it] 63%|██████▎   | 79/125 [15:28<08:38, 11.27s/it] 64%|██████▍   | 80/125 [15:42<08:51, 11.81s/it] 65%|██████▍   | 81/125 [15:50<07:58, 10.88s/it] 66%|██████▌   | 82/125 [16:01<07:40, 10.72s/it] 66%|██████▋   | 83/125 [16:12<07:37, 10.88s/it] 67%|██████▋   | 84/125 [16:23<07:32, 11.05s/it] 68%|██████▊   | 85/125 [16:32<06:59, 10.48s/it] 69%|██████▉   | 86/125 [16:48<07:48, 12.01s/it] 70%|██████▉   | 87/125 [16:56<06:55, 10.93s/it] 70%|███████   | 88/125 [17:08<06:54, 11.21s/it] 71%|███████   | 89/125 [17:20<06:51, 11.43s/it] 72%|███████▏  | 90/125 [17:33<06:51, 11.75s/it] 73%|███████▎  | 91/125 [17:43<06:25, 11.34s/it] 74%|███████▎  | 92/125 [17:53<06:03, 11.03s/it] 74%|███████▍  | 93/125 [18:05<05:55, 11.10s/it] 75%|███████▌  | 94/125 [18:13<05:22, 10.40s/it] 76%|███████▌  | 95/125 [18:24<05:12, 10.43s/it] 77%|███████▋  | 96/125 [18:35<05:05, 10.52s/it] 78%|███████▊  | 97/125 [18:45<04:51, 10.41s/it] 78%|███████▊  | 98/125 [18:56<04:48, 10.67s/it] 79%|███████▉  | 99/125 [19:06<04:33, 10.52s/it] 80%|████████  | 100/125 [19:17<04:23, 10.54s/it] 81%|████████  | 101/125 [19:26<04:04, 10.17s/it] 82%|████████▏ | 102/125 [19:37<03:54, 10.22s/it] 82%|████████▏ | 103/125 [19:45<03:33,  9.72s/it] 83%|████████▎ | 104/125 [19:56<03:28,  9.93s/it] 84%|████████▍ | 105/125 [20:10<03:48, 11.45s/it] 85%|████████▍ | 106/125 [20:20<03:27, 10.90s/it] 86%|████████▌ | 107/125 [20:29<03:03, 10.17s/it] 86%|████████▋ | 108/125 [20:37<02:42,  9.57s/it] 87%|████████▋ | 109/125 [20:48<02:40, 10.05s/it] 88%|████████▊ | 110/125 [21:00<02:40, 10.72s/it] 89%|████████▉ | 111/125 [21:14<02:42, 11.60s/it] 90%|████████▉ | 112/125 [21:27<02:36, 12.03s/it] 90%|█████████ | 113/125 [21:38<02:22, 11.87s/it] 91%|█████████ | 114/125 [21:48<02:04, 11.32s/it] 92%|█████████▏| 115/125 [21:59<01:51, 11.19s/it] 93%|█████████▎| 116/125 [22:11<01:41, 11.24s/it] 94%|█████████▎| 117/125 [22:24<01:35, 11.94s/it] 94%|█████████▍| 118/125 [22:35<01:20, 11.46s/it] 95%|█████████▌| 119/125 [22:48<01:12, 12.11s/it] 96%|█████████▌| 120/125 [23:03<01:03, 12.77s/it] 97%|█████████▋| 121/125 [23:13<00:48, 12.21s/it] 98%|█████████▊| 122/125 [23:24<00:35, 11.71s/it] 98%|█████████▊| 123/125 [23:37<00:24, 12.07s/it] 99%|█████████▉| 124/125 [23:47<00:11, 11.54s/it]100%|██████████| 125/125 [23:58<00:00, 11.35s/it]100%|██████████| 125/125 [23:58<00:00, 11.51s/it]
Used time: 24.1 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/freq_words_extraction.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name fwe             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 50             --num_samples 500             --random_seed 42             --alpha 2.0                                       --template "<|user|>
Read the following coded text and track the frequency of each coded word. Find the three most frequently appeared coded words. {context}
Question: Do not provide any explanation. Please ignore the dots '....'. What are the three most frequently appeared words in the above coded text?<|end|>
<|assistant|>
 Answer: According to the coded text above, the three most frequently appeared words are:"
            
Output:
num_example_words: 1834

Prepare fwe with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/fwe/validation.jsonl
Used time: 0.1 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict fwe 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/fwe/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/fwe.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.38s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.10it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.02it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:04<08:49,  4.27s/it]  2%|▏         | 2/125 [00:08<08:51,  4.32s/it]  2%|▏         | 3/125 [00:12<08:18,  4.09s/it]  3%|▎         | 4/125 [00:16<08:14,  4.09s/it]  4%|▍         | 5/125 [00:20<07:50,  3.92s/it]  5%|▍         | 6/125 [00:24<08:05,  4.08s/it]  6%|▌         | 7/125 [00:28<08:00,  4.07s/it]  6%|▋         | 8/125 [00:31<07:23,  3.79s/it]  7%|▋         | 9/125 [00:34<06:51,  3.55s/it]  8%|▊         | 10/125 [00:38<06:48,  3.55s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:41<06:35,  3.47s/it] 10%|▉         | 12/125 [00:45<06:44,  3.58s/it] 10%|█         | 13/125 [00:50<07:43,  4.14s/it] 11%|█         | 14/125 [00:54<07:25,  4.01s/it] 12%|█▏        | 15/125 [00:58<07:05,  3.87s/it] 13%|█▎        | 16/125 [01:01<06:58,  3.84s/it] 14%|█▎        | 17/125 [01:06<07:06,  3.94s/it] 14%|█▍        | 18/125 [01:10<07:17,  4.09s/it] 15%|█▌        | 19/125 [01:15<07:30,  4.25s/it] 16%|█▌        | 20/125 [01:19<07:30,  4.29s/it] 17%|█▋        | 21/125 [01:24<07:39,  4.42s/it] 18%|█▊        | 22/125 [01:27<06:55,  4.04s/it] 18%|█▊        | 23/125 [01:30<06:30,  3.83s/it] 19%|█▉        | 24/125 [01:34<06:13,  3.70s/it] 20%|██        | 25/125 [01:37<05:56,  3.57s/it] 21%|██        | 26/125 [01:40<05:37,  3.41s/it] 22%|██▏       | 27/125 [01:43<05:24,  3.31s/it] 22%|██▏       | 28/125 [01:47<05:28,  3.38s/it] 23%|██▎       | 29/125 [01:51<05:44,  3.59s/it] 24%|██▍       | 30/125 [01:55<05:56,  3.75s/it] 25%|██▍       | 31/125 [01:59<06:07,  3.91s/it] 26%|██▌       | 32/125 [02:03<05:59,  3.86s/it] 26%|██▋       | 33/125 [02:06<05:49,  3.80s/it] 27%|██▋       | 34/125 [02:12<06:19,  4.17s/it] 28%|██▊       | 35/125 [02:15<05:57,  3.97s/it] 29%|██▉       | 36/125 [02:19<06:00,  4.05s/it] 30%|██▉       | 37/125 [02:23<05:42,  3.89s/it] 30%|███       | 38/125 [02:26<05:31,  3.81s/it] 31%|███       | 39/125 [02:30<05:12,  3.64s/it] 32%|███▏      | 40/125 [02:35<05:40,  4.01s/it] 33%|███▎      | 41/125 [02:38<05:31,  3.95s/it] 34%|███▎      | 42/125 [02:42<05:20,  3.86s/it] 34%|███▍      | 43/125 [02:46<05:11,  3.79s/it] 35%|███▌      | 44/125 [02:49<05:01,  3.72s/it] 36%|███▌      | 45/125 [02:54<05:14,  3.93s/it] 37%|███▋      | 46/125 [02:57<04:50,  3.68s/it] 38%|███▊      | 47/125 [03:02<05:19,  4.09s/it] 38%|███▊      | 48/125 [03:05<05:07,  3.99s/it] 39%|███▉      | 49/125 [03:10<05:09,  4.08s/it] 40%|████      | 50/125 [03:14<05:09,  4.12s/it] 41%|████      | 51/125 [03:17<04:48,  3.90s/it] 42%|████▏     | 52/125 [03:22<04:55,  4.04s/it] 42%|████▏     | 53/125 [03:26<04:59,  4.16s/it] 43%|████▎     | 54/125 [03:29<04:35,  3.88s/it] 44%|████▍     | 55/125 [03:34<04:55,  4.22s/it] 45%|████▍     | 56/125 [03:38<04:34,  3.97s/it] 46%|████▌     | 57/125 [03:42<04:37,  4.08s/it] 46%|████▋     | 58/125 [03:45<04:17,  3.84s/it] 47%|████▋     | 59/125 [03:50<04:27,  4.06s/it] 48%|████▊     | 60/125 [03:54<04:28,  4.13s/it] 49%|████▉     | 61/125 [03:58<04:16,  4.00s/it] 50%|████▉     | 62/125 [04:01<04:02,  3.84s/it] 50%|█████     | 63/125 [04:07<04:26,  4.29s/it] 51%|█████     | 64/125 [04:11<04:12,  4.13s/it] 52%|█████▏    | 65/125 [04:14<03:58,  3.97s/it] 53%|█████▎    | 66/125 [04:18<03:59,  4.07s/it] 54%|█████▎    | 67/125 [04:22<03:43,  3.85s/it] 54%|█████▍    | 68/125 [04:25<03:34,  3.77s/it] 55%|█████▌    | 69/125 [04:29<03:25,  3.67s/it] 56%|█████▌    | 70/125 [04:32<03:17,  3.59s/it] 57%|█████▋    | 71/125 [04:36<03:13,  3.59s/it] 58%|█████▊    | 72/125 [04:39<03:11,  3.62s/it] 58%|█████▊    | 73/125 [04:43<03:04,  3.55s/it] 59%|█████▉    | 74/125 [04:47<03:02,  3.58s/it] 60%|██████    | 75/125 [04:51<03:08,  3.77s/it] 61%|██████    | 76/125 [04:55<03:11,  3.91s/it] 62%|██████▏   | 77/125 [05:00<03:31,  4.40s/it] 62%|██████▏   | 78/125 [05:04<03:19,  4.24s/it] 63%|██████▎   | 79/125 [05:09<03:14,  4.22s/it] 64%|██████▍   | 80/125 [05:13<03:11,  4.25s/it] 65%|██████▍   | 81/125 [05:17<03:04,  4.19s/it] 66%|██████▌   | 82/125 [05:21<03:02,  4.23s/it] 66%|██████▋   | 83/125 [05:25<02:48,  4.02s/it] 67%|██████▋   | 84/125 [05:29<02:51,  4.18s/it] 68%|██████▊   | 85/125 [05:32<02:34,  3.86s/it] 69%|██████▉   | 86/125 [05:36<02:28,  3.80s/it] 70%|██████▉   | 87/125 [05:40<02:21,  3.72s/it] 70%|███████   | 88/125 [05:43<02:11,  3.55s/it] 71%|███████   | 89/125 [05:47<02:16,  3.80s/it] 72%|███████▏  | 90/125 [05:50<02:08,  3.66s/it] 73%|███████▎  | 91/125 [05:54<02:02,  3.61s/it] 74%|███████▎  | 92/125 [05:57<01:56,  3.54s/it] 74%|███████▍  | 93/125 [06:01<01:52,  3.51s/it] 75%|███████▌  | 94/125 [06:05<01:57,  3.80s/it] 76%|███████▌  | 95/125 [06:09<01:53,  3.77s/it] 77%|███████▋  | 96/125 [06:12<01:45,  3.64s/it] 78%|███████▊  | 97/125 [06:16<01:39,  3.55s/it] 78%|███████▊  | 98/125 [06:19<01:33,  3.48s/it] 79%|███████▉  | 99/125 [06:24<01:38,  3.80s/it] 80%|████████  | 100/125 [06:28<01:41,  4.05s/it] 81%|████████  | 101/125 [06:33<01:39,  4.16s/it] 82%|████████▏ | 102/125 [06:37<01:38,  4.26s/it] 82%|████████▏ | 103/125 [06:40<01:27,  3.97s/it] 83%|████████▎ | 104/125 [06:45<01:26,  4.12s/it] 84%|████████▍ | 105/125 [06:48<01:18,  3.92s/it] 85%|████████▍ | 106/125 [06:52<01:12,  3.81s/it] 86%|████████▌ | 107/125 [06:55<01:05,  3.67s/it] 86%|████████▋ | 108/125 [06:59<01:01,  3.64s/it] 87%|████████▋ | 109/125 [07:03<01:00,  3.79s/it] 88%|████████▊ | 110/125 [07:08<01:01,  4.10s/it] 89%|████████▉ | 111/125 [07:11<00:55,  3.97s/it] 90%|████████▉ | 112/125 [07:16<00:53,  4.10s/it] 90%|█████████ | 113/125 [07:19<00:46,  3.87s/it] 91%|█████████ | 114/125 [07:23<00:41,  3.79s/it] 92%|█████████▏| 115/125 [07:26<00:36,  3.67s/it] 93%|█████████▎| 116/125 [07:30<00:34,  3.80s/it] 94%|█████████▎| 117/125 [07:34<00:30,  3.77s/it] 94%|█████████▍| 118/125 [07:39<00:29,  4.20s/it] 95%|█████████▌| 119/125 [07:43<00:24,  4.01s/it] 96%|█████████▌| 120/125 [07:46<00:19,  3.90s/it] 97%|█████████▋| 121/125 [07:50<00:15,  3.97s/it] 98%|█████████▊| 122/125 [07:54<00:11,  3.71s/it] 98%|█████████▊| 123/125 [07:57<00:07,  3.68s/it] 99%|█████████▉| 124/125 [08:01<00:03,  3.74s/it]100%|██████████| 125/125 [08:05<00:00,  3.75s/it]100%|██████████| 125/125 [08:05<00:00,  3.88s/it]
Used time: 8.2 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/qa.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name qa_1             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 32             --num_samples 500             --random_seed 42             --dataset squad                          --pre_samples 0             --template "<|user|>
Answer the question based on the given documents. Only give me the answer and do not output any other words.

The following are given documents.

{context}

Answer the question based on the given documents. Only give me the answer and do not output any other words.

Question: {query}<|end|>
<|assistant|>
 Answer:"
            
Output:
Max length 4096 | Current length 1873 | Docs: 10
Max length 4096 | Current length 3426 | Docs: 20
Max length 4096 | Current length 5154 | Docs: 30
Number of documents: 20

Prepare qa_1 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/qa_1/validation.jsonl
Used time: 0.1 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict qa_1 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/qa_1/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/qa_1.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.42s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.04it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.03s/it]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:02<04:57,  2.40s/it]  2%|▏         | 2/125 [00:03<03:44,  1.82s/it]  2%|▏         | 3/125 [00:05<03:32,  1.74s/it]  3%|▎         | 4/125 [00:06<03:20,  1.66s/it]  4%|▍         | 5/125 [00:08<03:31,  1.77s/it]  5%|▍         | 6/125 [00:10<03:24,  1.71s/it]  6%|▌         | 7/125 [00:12<03:41,  1.88s/it]  6%|▋         | 8/125 [00:14<03:25,  1.75s/it]  7%|▋         | 9/125 [00:16<03:34,  1.85s/it]  8%|▊         | 10/125 [00:17<03:25,  1.79s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:19<03:19,  1.75s/it] 10%|▉         | 12/125 [00:21<03:07,  1.66s/it] 10%|█         | 13/125 [00:22<03:03,  1.64s/it] 11%|█         | 14/125 [00:24<03:04,  1.66s/it] 12%|█▏        | 15/125 [00:25<02:53,  1.58s/it] 13%|█▎        | 16/125 [00:27<02:51,  1.58s/it] 14%|█▎        | 17/125 [00:29<02:57,  1.64s/it] 14%|█▍        | 18/125 [00:30<02:52,  1.61s/it] 15%|█▌        | 19/125 [00:32<03:02,  1.73s/it] 16%|█▌        | 20/125 [00:34<03:06,  1.78s/it] 17%|█▋        | 21/125 [00:36<03:00,  1.74s/it] 18%|█▊        | 22/125 [00:37<02:56,  1.72s/it] 18%|█▊        | 23/125 [00:40<03:08,  1.85s/it] 19%|█▉        | 24/125 [00:41<02:52,  1.71s/it] 20%|██        | 25/125 [00:43<02:54,  1.74s/it] 21%|██        | 26/125 [00:45<02:53,  1.75s/it] 22%|██▏       | 27/125 [00:46<02:41,  1.65s/it] 22%|██▏       | 28/125 [00:47<02:24,  1.49s/it] 23%|██▎       | 29/125 [00:49<02:43,  1.70s/it] 24%|██▍       | 30/125 [00:50<02:23,  1.51s/it] 25%|██▍       | 31/125 [00:52<02:36,  1.66s/it] 26%|██▌       | 32/125 [00:54<02:26,  1.58s/it] 26%|██▋       | 33/125 [00:56<02:54,  1.89s/it] 27%|██▋       | 34/125 [00:58<02:47,  1.84s/it] 28%|██▊       | 35/125 [01:00<02:51,  1.91s/it] 29%|██▉       | 36/125 [01:02<02:50,  1.92s/it] 30%|██▉       | 37/125 [01:04<02:38,  1.80s/it] 30%|███       | 38/125 [01:05<02:32,  1.76s/it] 31%|███       | 39/125 [01:07<02:26,  1.71s/it] 32%|███▏      | 40/125 [01:09<02:26,  1.73s/it] 33%|███▎      | 41/125 [01:11<02:38,  1.89s/it] 34%|███▎      | 42/125 [01:13<02:53,  2.09s/it] 34%|███▍      | 43/125 [01:15<02:43,  1.99s/it] 35%|███▌      | 44/125 [01:17<02:32,  1.89s/it] 36%|███▌      | 45/125 [01:18<02:14,  1.68s/it] 37%|███▋      | 46/125 [01:20<02:13,  1.69s/it] 38%|███▊      | 47/125 [01:21<02:01,  1.55s/it] 38%|███▊      | 48/125 [01:23<02:12,  1.72s/it] 39%|███▉      | 49/125 [01:25<02:07,  1.67s/it] 40%|████      | 50/125 [01:26<02:02,  1.64s/it] 41%|████      | 51/125 [01:28<02:01,  1.64s/it] 42%|████▏     | 52/125 [01:29<01:57,  1.61s/it] 42%|████▏     | 53/125 [01:32<02:11,  1.83s/it] 43%|████▎     | 54/125 [01:34<02:12,  1.86s/it] 44%|████▍     | 55/125 [01:36<02:11,  1.87s/it] 45%|████▍     | 56/125 [01:37<02:04,  1.81s/it] 46%|████▌     | 57/125 [01:39<02:11,  1.94s/it] 46%|████▋     | 58/125 [01:41<02:04,  1.86s/it] 47%|████▋     | 59/125 [01:43<01:54,  1.74s/it] 48%|████▊     | 60/125 [01:45<02:07,  1.97s/it] 49%|████▉     | 61/125 [01:47<01:58,  1.85s/it] 50%|████▉     | 62/125 [01:48<01:51,  1.77s/it] 50%|█████     | 63/125 [01:50<01:42,  1.65s/it] 51%|█████     | 64/125 [01:53<02:07,  2.09s/it] 52%|█████▏    | 65/125 [01:55<02:11,  2.19s/it] 53%|█████▎    | 66/125 [01:58<02:13,  2.26s/it] 54%|█████▎    | 67/125 [01:59<02:02,  2.11s/it] 54%|█████▍    | 68/125 [02:01<01:57,  2.05s/it] 55%|█████▌    | 69/125 [02:03<01:51,  2.00s/it] 56%|█████▌    | 70/125 [02:06<01:56,  2.11s/it] 57%|█████▋    | 71/125 [02:07<01:45,  1.96s/it] 58%|█████▊    | 72/125 [02:08<01:33,  1.77s/it] 58%|█████▊    | 73/125 [02:10<01:31,  1.75s/it] 59%|█████▉    | 74/125 [02:12<01:28,  1.73s/it] 60%|██████    | 75/125 [02:13<01:24,  1.69s/it] 61%|██████    | 76/125 [02:15<01:16,  1.55s/it] 62%|██████▏   | 77/125 [02:16<01:14,  1.55s/it] 62%|██████▏   | 78/125 [02:18<01:10,  1.51s/it] 63%|██████▎   | 79/125 [02:19<01:05,  1.42s/it] 64%|██████▍   | 80/125 [02:20<00:58,  1.31s/it] 65%|██████▍   | 81/125 [02:21<00:58,  1.32s/it] 66%|██████▌   | 82/125 [02:22<00:54,  1.27s/it] 66%|██████▋   | 83/125 [02:24<00:52,  1.26s/it] 67%|██████▋   | 84/125 [02:25<00:55,  1.36s/it] 68%|██████▊   | 85/125 [02:27<00:59,  1.49s/it] 69%|██████▉   | 86/125 [02:28<00:54,  1.39s/it] 70%|██████▉   | 87/125 [02:30<00:53,  1.41s/it] 70%|███████   | 88/125 [02:31<00:51,  1.38s/it] 71%|███████   | 89/125 [02:32<00:47,  1.32s/it] 72%|███████▏  | 90/125 [02:34<00:49,  1.41s/it] 73%|███████▎  | 91/125 [02:36<00:54,  1.59s/it] 74%|███████▎  | 92/125 [02:37<00:50,  1.54s/it] 74%|███████▍  | 93/125 [02:39<00:47,  1.48s/it] 75%|███████▌  | 94/125 [02:40<00:48,  1.55s/it] 76%|███████▌  | 95/125 [02:43<00:54,  1.83s/it] 77%|███████▋  | 96/125 [02:45<00:56,  1.95s/it] 78%|███████▊  | 97/125 [02:47<00:53,  1.92s/it] 78%|███████▊  | 98/125 [02:49<00:56,  2.09s/it] 79%|███████▉  | 99/125 [02:51<00:52,  2.03s/it] 80%|████████  | 100/125 [02:53<00:50,  2.03s/it] 81%|████████  | 101/125 [02:55<00:44,  1.84s/it] 82%|████████▏ | 102/125 [02:56<00:39,  1.73s/it] 82%|████████▏ | 103/125 [02:57<00:33,  1.54s/it] 83%|████████▎ | 104/125 [03:00<00:37,  1.78s/it] 84%|████████▍ | 105/125 [03:01<00:32,  1.62s/it] 85%|████████▍ | 106/125 [03:02<00:27,  1.47s/it] 86%|████████▌ | 107/125 [03:04<00:27,  1.53s/it] 86%|████████▋ | 108/125 [03:05<00:25,  1.50s/it] 87%|████████▋ | 109/125 [03:07<00:28,  1.79s/it] 88%|████████▊ | 110/125 [03:09<00:24,  1.63s/it] 89%|████████▉ | 111/125 [03:10<00:21,  1.53s/it] 90%|████████▉ | 112/125 [03:11<00:17,  1.36s/it] 90%|█████████ | 113/125 [03:13<00:16,  1.40s/it] 91%|█████████ | 114/125 [03:14<00:14,  1.34s/it] 92%|█████████▏| 115/125 [03:15<00:12,  1.28s/it] 93%|█████████▎| 116/125 [03:16<00:11,  1.26s/it] 94%|█████████▎| 117/125 [03:17<00:09,  1.23s/it] 94%|█████████▍| 118/125 [03:18<00:08,  1.23s/it] 95%|█████████▌| 119/125 [03:20<00:08,  1.45s/it] 96%|█████████▌| 120/125 [03:22<00:07,  1.45s/it] 97%|█████████▋| 121/125 [03:24<00:06,  1.51s/it] 98%|█████████▊| 122/125 [03:25<00:04,  1.48s/it] 98%|█████████▊| 123/125 [03:27<00:03,  1.66s/it] 99%|█████████▉| 124/125 [03:29<00:01,  1.70s/it]100%|██████████| 125/125 [03:31<00:00,  1.75s/it]100%|██████████| 125/125 [03:31<00:00,  1.69s/it]
Used time: 3.6 minutes
python /mnt/azureml/cr/j/5298e49000fe4c58a3eb347f7197368e/exe/wd/RULER/scripts/data/synthetic/qa.py             --save_dir  benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data             --save_name qa_2             --subset validation             --tokenizer_path microsoft/Phi-3.5-mini-instruct             --tokenizer_type hf             --max_seq_length 4096             --tokens_to_generate 32             --num_samples 500             --random_seed 42             --dataset hotpotqa                          --pre_samples 0             --template "<|user|>
Answer the question based on the given documents. Only give me the answer and do not output any other words.

The following are given documents.

{context}

Answer the question based on the given documents. Only give me the answer and do not output any other words.

Question: {query}<|end|>
<|assistant|>
 Answer:"
            
Output:
Max length 4096 | Current length 1504 | Docs: 10
Max length 4096 | Current length 2981 | Docs: 20
Max length 4096 | Current length 4482 | Docs: 30
Number of documents: 20

Prepare qa_2 with lines: 500 to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/qa_2/validation.jsonl
Used time: 0.2 minutes
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Predict qa_2 
from benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/data/qa_2/validation.jsonl
to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/qa_2.jsonl
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.39s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.11it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.02it/s]
  0%|          | 0/125 [00:00<?, ?it/s]/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:515: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.0` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/opt/conda/envs/ptca/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:537: UserWarning: `do_sample` is set to `False`. However, `top_k` is set to `32` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_k`.
  warnings.warn(
  1%|          | 1/125 [00:04<08:28,  4.10s/it]  2%|▏         | 2/125 [00:05<05:34,  2.72s/it]  2%|▏         | 3/125 [00:08<05:04,  2.50s/it]  3%|▎         | 4/125 [00:09<04:22,  2.17s/it]  4%|▍         | 5/125 [00:11<04:02,  2.02s/it]  5%|▍         | 6/125 [00:13<03:46,  1.90s/it]  6%|▌         | 7/125 [00:14<03:37,  1.84s/it]  6%|▋         | 8/125 [00:16<03:23,  1.74s/it]  7%|▋         | 9/125 [00:17<03:09,  1.63s/it]  8%|▊         | 10/125 [00:19<03:22,  1.76s/it]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
  9%|▉         | 11/125 [00:22<03:34,  1.88s/it] 10%|▉         | 12/125 [00:23<03:22,  1.79s/it] 10%|█         | 13/125 [00:25<03:13,  1.73s/it] 11%|█         | 14/125 [00:27<03:28,  1.88s/it] 12%|█▏        | 15/125 [00:29<03:48,  2.08s/it] 13%|█▎        | 16/125 [00:32<03:49,  2.10s/it] 14%|█▎        | 17/125 [00:33<03:27,  1.93s/it] 14%|█▍        | 18/125 [00:35<03:26,  1.93s/it] 15%|█▌        | 19/125 [00:36<03:06,  1.76s/it] 16%|█▌        | 20/125 [00:38<02:48,  1.61s/it] 17%|█▋        | 21/125 [00:39<02:52,  1.66s/it] 18%|█▊        | 22/125 [00:42<03:13,  1.87s/it] 18%|█▊        | 23/125 [00:44<03:05,  1.82s/it] 19%|█▉        | 24/125 [00:46<03:19,  1.97s/it] 20%|██        | 25/125 [00:48<03:36,  2.17s/it] 21%|██        | 26/125 [00:50<03:18,  2.00s/it] 22%|██▏       | 27/125 [00:52<03:02,  1.86s/it] 22%|██▏       | 28/125 [00:53<02:56,  1.82s/it] 23%|██▎       | 29/125 [00:56<03:04,  1.92s/it] 24%|██▍       | 30/125 [00:58<03:28,  2.19s/it] 25%|██▍       | 31/125 [01:00<03:16,  2.09s/it] 26%|██▌       | 32/125 [01:01<02:52,  1.85s/it] 26%|██▋       | 33/125 [01:04<02:57,  1.93s/it] 27%|██▋       | 34/125 [01:05<02:44,  1.81s/it] 28%|██▊       | 35/125 [01:07<02:43,  1.81s/it] 29%|██▉       | 36/125 [01:08<02:30,  1.69s/it] 30%|██▉       | 37/125 [01:10<02:28,  1.68s/it] 30%|███       | 38/125 [01:12<02:25,  1.67s/it] 31%|███       | 39/125 [01:13<02:16,  1.59s/it] 32%|███▏      | 40/125 [01:15<02:14,  1.58s/it] 33%|███▎      | 41/125 [01:16<02:07,  1.51s/it] 34%|███▎      | 42/125 [01:18<02:18,  1.67s/it] 34%|███▍      | 43/125 [01:20<02:21,  1.72s/it] 35%|███▌      | 44/125 [01:21<02:14,  1.66s/it] 36%|███▌      | 45/125 [01:22<01:59,  1.49s/it] 37%|███▋      | 46/125 [01:24<02:04,  1.57s/it] 38%|███▊      | 47/125 [01:26<02:05,  1.61s/it] 38%|███▊      | 48/125 [01:27<01:56,  1.51s/it] 39%|███▉      | 49/125 [01:29<02:00,  1.59s/it] 40%|████      | 50/125 [01:31<01:59,  1.59s/it] 41%|████      | 51/125 [01:33<02:05,  1.70s/it] 42%|████▏     | 52/125 [01:34<02:06,  1.73s/it] 42%|████▏     | 53/125 [01:36<02:03,  1.72s/it] 43%|████▎     | 54/125 [01:38<02:05,  1.77s/it] 44%|████▍     | 55/125 [01:39<01:58,  1.70s/it] 45%|████▍     | 56/125 [01:41<01:50,  1.60s/it] 46%|████▌     | 57/125 [01:42<01:41,  1.49s/it] 46%|████▋     | 58/125 [01:44<01:43,  1.55s/it] 47%|████▋     | 59/125 [01:46<01:58,  1.79s/it] 48%|████▊     | 60/125 [01:47<01:49,  1.68s/it] 49%|████▉     | 61/125 [01:49<01:44,  1.64s/it] 50%|████▉     | 62/125 [01:50<01:38,  1.56s/it] 50%|█████     | 63/125 [01:52<01:38,  1.58s/it] 51%|█████     | 64/125 [01:54<01:45,  1.74s/it] 52%|█████▏    | 65/125 [01:56<01:39,  1.66s/it] 53%|█████▎    | 66/125 [01:57<01:36,  1.63s/it] 54%|█████▎    | 67/125 [01:59<01:31,  1.57s/it] 54%|█████▍    | 68/125 [02:00<01:32,  1.62s/it] 55%|█████▌    | 69/125 [02:02<01:29,  1.61s/it] 56%|█████▌    | 70/125 [02:03<01:22,  1.51s/it] 57%|█████▋    | 71/125 [02:05<01:21,  1.52s/it] 58%|█████▊    | 72/125 [02:07<01:27,  1.66s/it] 58%|█████▊    | 73/125 [02:09<01:32,  1.78s/it] 59%|█████▉    | 74/125 [02:10<01:29,  1.75s/it] 60%|██████    | 75/125 [02:12<01:25,  1.70s/it] 61%|██████    | 76/125 [02:14<01:33,  1.91s/it] 62%|██████▏   | 77/125 [02:16<01:32,  1.93s/it] 62%|██████▏   | 78/125 [02:18<01:25,  1.82s/it] 63%|██████▎   | 79/125 [02:20<01:28,  1.93s/it] 64%|██████▍   | 80/125 [02:22<01:25,  1.91s/it] 65%|██████▍   | 81/125 [02:24<01:18,  1.78s/it] 66%|██████▌   | 82/125 [02:26<01:25,  2.00s/it] 66%|██████▋   | 83/125 [02:27<01:13,  1.74s/it] 67%|██████▋   | 84/125 [02:29<01:09,  1.70s/it] 68%|██████▊   | 85/125 [02:32<01:21,  2.04s/it] 69%|██████▉   | 86/125 [02:33<01:12,  1.85s/it] 70%|██████▉   | 87/125 [02:35<01:07,  1.78s/it] 70%|███████   | 88/125 [02:36<01:01,  1.67s/it] 71%|███████   | 89/125 [02:39<01:10,  1.96s/it] 72%|███████▏  | 90/125 [02:41<01:10,  2.01s/it] 73%|███████▎  | 91/125 [02:42<01:02,  1.82s/it] 74%|███████▎  | 92/125 [02:44<00:59,  1.79s/it] 74%|███████▍  | 93/125 [02:45<00:53,  1.66s/it] 75%|███████▌  | 94/125 [02:47<00:50,  1.61s/it] 76%|███████▌  | 95/125 [02:49<00:57,  1.92s/it] 77%|███████▋  | 96/125 [02:51<00:53,  1.86s/it] 78%|███████▊  | 97/125 [02:53<00:49,  1.76s/it] 78%|███████▊  | 98/125 [02:54<00:45,  1.69s/it] 79%|███████▉  | 99/125 [02:55<00:40,  1.57s/it] 80%|████████  | 100/125 [02:57<00:37,  1.49s/it] 81%|████████  | 101/125 [02:58<00:35,  1.48s/it] 82%|████████▏ | 102/125 [03:00<00:34,  1.50s/it] 82%|████████▏ | 103/125 [03:01<00:33,  1.54s/it] 83%|████████▎ | 104/125 [03:03<00:32,  1.57s/it] 84%|████████▍ | 105/125 [03:05<00:32,  1.63s/it] 85%|████████▍ | 106/125 [03:07<00:31,  1.65s/it] 86%|████████▌ | 107/125 [03:09<00:35,  1.97s/it] 86%|████████▋ | 108/125 [03:12<00:35,  2.11s/it] 87%|████████▋ | 109/125 [03:13<00:30,  1.92s/it] 88%|████████▊ | 110/125 [03:15<00:27,  1.84s/it] 89%|████████▉ | 111/125 [03:16<00:25,  1.79s/it] 90%|████████▉ | 112/125 [03:18<00:23,  1.81s/it] 90%|█████████ | 113/125 [03:20<00:21,  1.77s/it] 91%|█████████ | 114/125 [03:23<00:23,  2.15s/it] 92%|█████████▏| 115/125 [03:26<00:23,  2.36s/it] 93%|█████████▎| 116/125 [03:27<00:18,  2.05s/it] 94%|█████████▎| 117/125 [03:29<00:16,  2.08s/it] 94%|█████████▍| 118/125 [03:31<00:14,  2.00s/it] 95%|█████████▌| 119/125 [03:33<00:11,  1.88s/it] 96%|█████████▌| 120/125 [03:34<00:08,  1.80s/it] 97%|█████████▋| 121/125 [03:38<00:09,  2.30s/it] 98%|█████████▊| 122/125 [03:40<00:06,  2.16s/it] 98%|█████████▊| 123/125 [03:41<00:03,  1.96s/it] 99%|█████████▉| 124/125 [03:43<00:01,  1.85s/it]100%|██████████| 125/125 [03:44<00:00,  1.75s/it]100%|██████████| 125/125 [03:44<00:00,  1.80s/it]
Used time: 3.8 minutes
Total tasks: ['niah_single_1', 'niah_single_2', 'niah_single_3', 'niah_multikey_1', 'niah_multikey_2', 'niah_multikey_3', 'niah_multivalue', 'niah_multiquery', 'vt', 'cwe', 'fwe', 'qa_1', 'qa_2']
Evaluate task niah_single_1...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 667245.31it/s]
Evaluate task niah_single_2...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 595951.12it/s]
Evaluate task niah_single_3...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 741305.05it/s]
Evaluate task niah_multikey_1...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 806907.27it/s]
Evaluate task niah_multikey_2...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 763433.56it/s]
Evaluate task niah_multikey_3...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 768750.73it/s]
Evaluate task niah_multivalue...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 251035.67it/s]
Evaluate task niah_multiquery...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 268143.72it/s]
Evaluate task vt...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 514007.84it/s]
Evaluate task cwe...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 309268.84it/s]
Evaluate task fwe...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 580285.56it/s]
Evaluate task qa_1...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 707302.53it/s]
Evaluate task qa_2...
  0%|          | 0/500 [00:00<?, ?it/s]100%|██████████| 500/500 [00:00<00:00, 776148.04it/s]

=============================================

      0              1              2   ...     11     12     13
0  Tasks  niah_single_1  niah_single_2  ...    fwe   qa_1   qa_2
1  Score          100.0           99.6  ...   90.8   84.0   55.6
2  Nulls          0/500          0/500  ...  0/500  0/500  0/500

[3 rows x 14 columns]

Saved eval results to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/summary.csv

Saved submission results to benchmark_RULER_root/Phi-3.5-mini-instruct/synthetic/4096/pred/submission.csv
Total time spent on call_api: 9709 seconds
